{"version":3,"file":"default-node_modules_ng-zorro-antd_fesm2022_ng-zorro-antd-typography_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/clipboard.mjs","./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-trans-button.mjs","./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-typography.mjs"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        // The element needs to be inserted into the fullscreen container, if the page\n        // is in fullscreen mode, otherwise the browser won't execute the copy command.\n        (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Clipboard, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                }] }]; }, propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\nclass ClipboardModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: ClipboardModule, declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ClipboardModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, NgModule } from '@angular/core';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonDirective {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTransButtonDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTransButtonDirective, selector: \"button[nz-trans-button]\", host: { properties: { \"style.border\": \"\\\"0\\\"\", \"style.background\": \"\\\"transparent\\\"\", \"style.padding\": \"\\\"0\\\"\", \"style.line-height\": \"\\\"inherit\\\"\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTransButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[nz-trans-button]',\n                    host: {\n                        '[style.border]': '\"0\"',\n                        '[style.background]': '\"transparent\"',\n                        '[style.padding]': '\"0\"',\n                        '[style.line-height]': '\"inherit\"'\n                    }\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransButtonModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTransButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTransButtonModule, declarations: [NzTransButtonDirective], imports: [CommonModule], exports: [NzTransButtonDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTransButtonModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTransButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzTransButtonDirective],\n                    exports: [NzTransButtonDirective],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTransButtonDirective, NzTransButtonModule };\n","import * as i5$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport * as i2$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i6$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Inject, Optional, NgModule } from '@angular/core';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i5 from 'ng-zorro-antd/core/trans-button';\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\nimport * as i2 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i6$2 from 'ng-zorro-antd/input';\nimport { NzAutosizeDirective, NzInputModule } from 'ng-zorro-antd/input';\nimport * as i4 from 'ng-zorro-antd/tooltip';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { Subject, BehaviorSubject, Observable, fromEvent, EMPTY, from, Subscription } from 'rxjs';\nimport { takeUntil, switchMap, take, withLatestFrom } from 'rxjs/operators';\nimport { ESCAPE, ENTER } from '@angular/cdk/keycodes';\nimport * as i2$1 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { __decorate } from 'tslib';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { isStyleSupport, measure, InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n\nclass NzTextCopyComponent {\n    constructor(host, cdr, clipboard, i18n) {\n        this.host = host;\n        this.cdr = cdr;\n        this.clipboard = clipboard;\n        this.i18n = i18n;\n        this.copied = false;\n        this.copyId = -1;\n        this.nativeElement = this.host.nativeElement;\n        this.copyTooltip = null;\n        this.copedTooltip = null;\n        this.copyIcon = 'copy';\n        this.copedIcon = 'check';\n        this.destroy$ = new Subject();\n        this.icons = ['copy', 'check'];\n        this.textCopy = new EventEmitter();\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.updateTooltips();\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tooltips, icons } = changes;\n        if (tooltips) {\n            this.updateTooltips();\n        }\n        if (icons) {\n            this.updateIcons();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.copyId);\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n    onClick() {\n        if (this.copied) {\n            return;\n        }\n        this.copied = true;\n        this.cdr.detectChanges();\n        const text = this.text;\n        this.textCopy.emit(text);\n        this.clipboard.copy(text);\n        this.onCopied();\n    }\n    onCopied() {\n        clearTimeout(this.copyId);\n        this.copyId = setTimeout(() => {\n            this.copied = false;\n            this.cdr.detectChanges();\n        }, 3000);\n    }\n    updateTooltips() {\n        if (this.tooltips === null) {\n            this.copedTooltip = null;\n            this.copyTooltip = null;\n        }\n        else if (Array.isArray(this.tooltips)) {\n            const [copyTooltip, copedTooltip] = this.tooltips;\n            this.copyTooltip = copyTooltip || this.locale?.copy;\n            this.copedTooltip = copedTooltip || this.locale?.copied;\n        }\n        else {\n            this.copyTooltip = this.locale?.copy;\n            this.copedTooltip = this.locale?.copied;\n        }\n        this.cdr.markForCheck();\n    }\n    updateIcons() {\n        const [copyIcon, copedIcon] = this.icons;\n        this.copyIcon = copyIcon;\n        this.copedIcon = copedIcon;\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTextCopyComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Clipboard }, { token: i2.NzI18nService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: { text: \"text\", tooltips: \"tooltips\", icons: \"icons\" }, outputs: { textCopy: \"textCopy\" }, exportAs: [\"nzTextCopy\"], usesOnChanges: true, ngImport: i0, template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <span nz-icon [nzType]=\"icon\"></span>\n      </ng-container>\n    </button>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i4.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { kind: \"directive\", type: i5.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { kind: \"directive\", type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTextCopyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-copy',\n                    exportAs: 'nzTextCopy',\n                    template: `\n    <button\n      type=\"button\"\n      nz-tooltip\n      nz-trans-button\n      [nzTooltipTitle]=\"copied ? copedTooltip : copyTooltip\"\n      class=\"ant-typography-copy\"\n      [class.ant-typography-copy-success]=\"copied\"\n      (click)=\"onClick()\"\n    >\n      <ng-container *nzStringTemplateOutlet=\"copied ? copedIcon : copyIcon; let icon\">\n        <span nz-icon [nzType]=\"icon\"></span>\n      </ng-container>\n    </button>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Clipboard }, { type: i2.NzI18nService }]; }, propDecorators: { text: [{\n                type: Input\n            }], tooltips: [{\n                type: Input\n            }], icons: [{\n                type: Input\n            }], textCopy: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextEditComponent {\n    set textarea(textarea) {\n        this.textarea$.next(textarea);\n    }\n    constructor(ngZone, host, cdr, i18n, destroy$) {\n        this.ngZone = ngZone;\n        this.host = host;\n        this.cdr = cdr;\n        this.i18n = i18n;\n        this.destroy$ = destroy$;\n        this.editing = false;\n        this.icon = 'edit';\n        this.startEditing = new EventEmitter();\n        this.endEditing = new EventEmitter(true);\n        this.nativeElement = this.host.nativeElement;\n        // We could've saved the textarea within some private property (e.g. `_textarea`) and have a getter,\n        // but having subject makes the code more reactive and cancellable (e.g. event listeners will be\n        // automatically removed and re-added through the `switchMap` below).\n        this.textarea$ = new BehaviorSubject(null);\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        this.textarea$\n            .pipe(switchMap(textarea => \n        // Caretaker note: we explicitly should call `subscribe()` within the root zone.\n        // `runOutsideAngular(() => fromEvent(...))` will just create an observable within the root zone,\n        // but `addEventListener` is called when the `fromEvent` is subscribed.\n        textarea\n            ? new Observable(subscriber => this.ngZone.runOutsideAngular(() => fromEvent(textarea.nativeElement, 'keydown').subscribe(subscriber)))\n            : EMPTY), takeUntil(this.destroy$))\n            .subscribe(event => {\n            // Caretaker note: adding modifier at the end (for instance `(keydown.esc)`) will tell Angular to add\n            // an event listener through the `KeyEventsPlugin`, which always runs `ngZone.runGuarded()` internally.\n            // We're interested only in escape and enter keyboard buttons, otherwise Angular will run change detection\n            // on any `keydown` event.\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                return;\n            }\n            this.ngZone.run(() => {\n                if (event.keyCode === ESCAPE) {\n                    this.onCancel();\n                }\n                else {\n                    this.onEnter(event);\n                }\n                this.cdr.markForCheck();\n            });\n        });\n        this.textarea$\n            .pipe(switchMap(textarea => textarea\n            ? new Observable(subscriber => this.ngZone.runOutsideAngular(() => fromEvent(textarea.nativeElement, 'input').subscribe(subscriber)))\n            : EMPTY), takeUntil(this.destroy$))\n            .subscribe(event => {\n            this.currentText = event.target.value;\n        });\n    }\n    onClick() {\n        this.beforeText = this.text;\n        this.currentText = this.beforeText;\n        this.editing = true;\n        this.startEditing.emit();\n        this.focusAndSetValue();\n    }\n    confirm() {\n        this.editing = false;\n        this.endEditing.emit(this.currentText);\n    }\n    onEnter(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.confirm();\n    }\n    onCancel() {\n        this.currentText = this.beforeText;\n        this.confirm();\n    }\n    focusAndSetValue() {\n        // Note: the zone may be nooped through `BootstrapOptions` when bootstrapping the root module. This means\n        // the `onStable` will never emit any value.\n        const onStable$ = this.ngZone.isStable ? from(Promise.resolve()) : this.ngZone.onStable.pipe(take(1));\n        // Normally this isn't in the zone, but it can cause performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this.ngZone.runOutsideAngular(() => {\n            onStable$.pipe(withLatestFrom(this.textarea$), takeUntil(this.destroy$)).subscribe(([, textarea]) => {\n                if (textarea) {\n                    textarea.nativeElement.focus();\n                    textarea.nativeElement.value = this.currentText || '';\n                    this.autosizeDirective.resizeToFitContent();\n                    this.cdr.markForCheck();\n                }\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTextEditComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.NzI18nService }, { token: i2$1.NzDestroyService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: { text: \"text\", icon: \"icon\", tooltip: \"tooltip\" }, outputs: { startEditing: \"startEditing\", endEditing: \"endEditing\" }, providers: [NzDestroyService], viewQueries: [{ propertyName: \"textarea\", first: true, predicate: [\"textarea\"], descendants: true }, { propertyName: \"autosizeDirective\", first: true, predicate: NzAutosizeDirective, descendants: true }], exportAs: [\"nzTextEdit\"], ngImport: i0, template: `\n    <ng-template [ngIf]=\"editing\" [ngIfElse]=\"notEditing\">\n      <textarea #textarea nz-input nzAutosize (blur)=\"confirm()\"></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <span nz-icon nzType=\"enter\"></span>\n      </button>\n    </ng-template>\n\n    <ng-template #notEditing>\n      <button\n        nz-tooltip\n        nz-trans-button\n        class=\"ant-typography-edit\"\n        [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n        (click)=\"onClick()\"\n      >\n        <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n          <span nz-icon [nzType]=\"icon\"></span>\n        </ng-container>\n      </button>\n    </ng-template>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i6$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i4.NzTooltipDirective, selector: \"[nz-tooltip]\", inputs: [\"nzTooltipTitle\", \"nzTooltipTitleContext\", \"nz-tooltip\", \"nzTooltipTrigger\", \"nzTooltipPlacement\", \"nzTooltipOrigin\", \"nzTooltipVisible\", \"nzTooltipMouseEnterDelay\", \"nzTooltipMouseLeaveDelay\", \"nzTooltipOverlayClassName\", \"nzTooltipOverlayStyle\", \"nzTooltipArrowPointAtCenter\", \"nzTooltipColor\"], outputs: [\"nzTooltipVisibleChange\"], exportAs: [\"nzTooltip\"] }, { kind: \"directive\", type: i6$2.NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: [\"nzBorderless\", \"nzSize\", \"nzStepperless\", \"nzStatus\", \"disabled\"], exportAs: [\"nzInput\"] }, { kind: \"directive\", type: i6$2.NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: [\"nzAutosize\"], exportAs: [\"nzAutosize\"] }, { kind: \"directive\", type: i5.NzTransButtonDirective, selector: \"button[nz-trans-button]\" }, { kind: \"directive\", type: i6.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTextEditComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-text-edit',\n                    exportAs: 'nzTextEdit',\n                    template: `\n    <ng-template [ngIf]=\"editing\" [ngIfElse]=\"notEditing\">\n      <textarea #textarea nz-input nzAutosize (blur)=\"confirm()\"></textarea>\n      <button nz-trans-button class=\"ant-typography-edit-content-confirm\" (click)=\"confirm()\">\n        <span nz-icon nzType=\"enter\"></span>\n      </button>\n    </ng-template>\n\n    <ng-template #notEditing>\n      <button\n        nz-tooltip\n        nz-trans-button\n        class=\"ant-typography-edit\"\n        [nzTooltipTitle]=\"tooltip === null ? null : tooltip || locale?.edit\"\n        (click)=\"onClick()\"\n      >\n        <ng-container *nzStringTemplateOutlet=\"icon; let icon\">\n          <span nz-icon [nzType]=\"icon\"></span>\n        </ng-container>\n      </button>\n    </ng-template>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    providers: [NzDestroyService]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.NzI18nService }, { type: i2$1.NzDestroyService }]; }, propDecorators: { text: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], startEditing: [{\n                type: Output\n            }], endEditing: [{\n                type: Output\n            }], textarea: [{\n                type: ViewChild,\n                args: ['textarea', { static: false }]\n            }], autosizeDirective: [{\n                type: ViewChild,\n                args: [NzAutosizeDirective, { static: false }]\n            }] } });\n\nconst NZ_CONFIG_MODULE_NAME = 'typography';\nconst EXPAND_ELEMENT_CLASSNAME = 'ant-typography-expand';\nclass NzTypographyComponent {\n    get hasEllipsisObservers() {\n        return this.nzOnEllipsis.observers.length > 0;\n    }\n    get canCssEllipsis() {\n        return this.nzEllipsis && this.cssEllipsis && !this.expanded && !this.hasEllipsisObservers;\n    }\n    get hasOperationsWithEllipsis() {\n        return (this.nzCopyable || this.nzEditable || this.nzExpandable) && this.nzEllipsis;\n    }\n    get copyText() {\n        return (typeof this.nzCopyText === 'string' ? this.nzCopyText : this.nzContent);\n    }\n    constructor(nzConfigService, host, cdr, viewContainerRef, renderer, platform, i18n, document, resizeService, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.host = host;\n        this.cdr = cdr;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.platform = platform;\n        this.i18n = i18n;\n        this.resizeService = resizeService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzCopyable = false;\n        this.nzEditable = false;\n        this.nzDisabled = false;\n        this.nzExpandable = false;\n        this.nzEllipsis = false;\n        this.nzCopyTooltips = undefined;\n        this.nzCopyIcons = ['copy', 'check'];\n        this.nzEditTooltip = undefined;\n        this.nzEditIcon = 'edit';\n        this.nzEllipsisRows = 1;\n        this.nzContentChange = new EventEmitter();\n        this.nzCopy = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        // This is not a two-way binding output with {@link nzEllipsis}\n        this.nzOnEllipsis = new EventEmitter();\n        this.expandableBtnElementCache = null;\n        this.editing = false;\n        this.cssEllipsis = false;\n        this.isEllipsis = true;\n        this.expanded = false;\n        this.ellipsisStr = '...';\n        this.dir = 'ltr';\n        this.viewInit = false;\n        this.rfaId = -1;\n        this.destroy$ = new Subject();\n        this.windowResizeSubscription = Subscription.EMPTY;\n        this.document = document;\n    }\n    onTextCopy(text) {\n        this.nzCopy.emit(text);\n    }\n    onStartEditing() {\n        this.editing = true;\n    }\n    onEndEditing(text) {\n        this.editing = false;\n        this.nzContentChange.emit(text);\n        if (this.nzContent === text) {\n            this.renderOnNextFrame();\n        }\n        this.cdr.markForCheck();\n    }\n    onExpand() {\n        this.isEllipsis = false;\n        this.expanded = true;\n        this.nzExpandChange.emit();\n        this.nzOnEllipsis.emit(false);\n    }\n    canUseCSSEllipsis() {\n        if (this.nzEditable || this.nzCopyable || this.nzExpandable || this.nzSuffix) {\n            return false;\n        }\n        // make sure {@link nzOnEllipsis} works, will force use JS to calculations\n        if (this.hasEllipsisObservers) {\n            return false;\n        }\n        if (this.nzEllipsisRows === 1) {\n            return isStyleSupport('textOverflow');\n        }\n        else {\n            return isStyleSupport('webkitLineClamp');\n        }\n    }\n    renderOnNextFrame() {\n        cancelRequestAnimationFrame(this.rfaId);\n        if (!this.viewInit || !this.nzEllipsis || this.nzEllipsisRows < 0 || this.expanded || !this.platform.isBrowser) {\n            return;\n        }\n        this.rfaId = reqAnimFrame(() => {\n            this.syncEllipsis();\n        });\n    }\n    getOriginContentViewRef() {\n        const viewRef = this.viewContainerRef.createEmbeddedView(this.contentTemplate, {\n            content: this.nzContent\n        });\n        viewRef.detectChanges();\n        return {\n            viewRef,\n            removeView: () => {\n                this.viewContainerRef.remove(this.viewContainerRef.indexOf(viewRef));\n            }\n        };\n    }\n    syncEllipsis() {\n        if (this.cssEllipsis) {\n            return;\n        }\n        const { viewRef, removeView } = this.getOriginContentViewRef();\n        const fixedNodes = [this.textCopyRef, this.textEditRef]\n            .filter(e => e && e.nativeElement)\n            .map(e => e.nativeElement);\n        const expandableBtnElement = this.getExpandableBtnElement();\n        if (expandableBtnElement) {\n            fixedNodes.push(expandableBtnElement);\n        }\n        const { contentNodes, text, ellipsis } = measure(this.host.nativeElement, this.nzEllipsisRows, viewRef.rootNodes, fixedNodes, this.ellipsisStr, this.nzSuffix);\n        removeView();\n        this.ellipsisText = text;\n        if (ellipsis !== this.isEllipsis) {\n            this.isEllipsis = ellipsis;\n            this.nzOnEllipsis.emit(ellipsis);\n        }\n        const ellipsisContainerNativeElement = this.ellipsisContainer.nativeElement;\n        while (ellipsisContainerNativeElement.firstChild) {\n            this.renderer.removeChild(ellipsisContainerNativeElement, ellipsisContainerNativeElement.firstChild);\n        }\n        contentNodes.forEach(n => {\n            this.renderer.appendChild(ellipsisContainerNativeElement, n.cloneNode(true));\n        });\n        this.cdr.markForCheck();\n    }\n    // Need to create the element for calculation size before view init\n    getExpandableBtnElement() {\n        if (this.nzExpandable) {\n            const expandText = this.locale ? this.locale.expand : '';\n            const cache = this.expandableBtnElementCache;\n            if (!cache || cache.innerText === expandText) {\n                const el = this.document.createElement('a');\n                el.className = EXPAND_ELEMENT_CLASSNAME;\n                el.innerText = expandText;\n                this.expandableBtnElementCache = el;\n            }\n            return this.expandableBtnElementCache;\n        }\n        else {\n            this.expandableBtnElementCache = null;\n            return null;\n        }\n    }\n    renderAndSubscribeWindowResize() {\n        if (this.platform.isBrowser) {\n            this.windowResizeSubscription.unsubscribe();\n            this.cssEllipsis = this.canUseCSSEllipsis();\n            this.renderOnNextFrame();\n            this.windowResizeSubscription = this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.renderOnNextFrame());\n        }\n    }\n    ngOnInit() {\n        this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.locale = this.i18n.getLocaleData('Text');\n            this.cdr.markForCheck();\n        });\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        this.viewInit = true;\n        this.renderAndSubscribeWindowResize();\n    }\n    ngOnChanges(changes) {\n        const { nzCopyable, nzEditable, nzExpandable, nzEllipsis, nzContent, nzEllipsisRows, nzSuffix } = changes;\n        if (nzCopyable || nzEditable || nzExpandable || nzEllipsis || nzContent || nzEllipsisRows || nzSuffix) {\n            if (this.nzEllipsis) {\n                if (this.expanded) {\n                    this.windowResizeSubscription.unsubscribe();\n                }\n                else {\n                    this.renderAndSubscribeWindowResize();\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this.expandableBtnElementCache = null;\n        this.windowResizeSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTypographyComponent, deps: [{ token: i1$1.NzConfigService }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i2$2.Platform }, { token: i2.NzI18nService }, { token: DOCUMENT }, { token: i2$1.NzResizeService }, { token: i5$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTypographyComponent, selector: \"\\n  nz-typography,\\n  [nz-typography],\\n  p[nz-paragraph],\\n  span[nz-text],\\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\\n  \", inputs: { nzCopyable: \"nzCopyable\", nzEditable: \"nzEditable\", nzDisabled: \"nzDisabled\", nzExpandable: \"nzExpandable\", nzEllipsis: \"nzEllipsis\", nzCopyTooltips: \"nzCopyTooltips\", nzCopyIcons: \"nzCopyIcons\", nzEditTooltip: \"nzEditTooltip\", nzEditIcon: \"nzEditIcon\", nzContent: \"nzContent\", nzEllipsisRows: \"nzEllipsisRows\", nzType: \"nzType\", nzCopyText: \"nzCopyText\", nzSuffix: \"nzSuffix\" }, outputs: { nzContentChange: \"nzContentChange\", nzCopy: \"nzCopy\", nzExpandChange: \"nzExpandChange\", nzOnEllipsis: \"nzOnEllipsis\" }, host: { properties: { \"class.ant-typography\": \"!editing\", \"class.ant-typography-rtl\": \"dir === \\\"rtl\\\"\", \"class.ant-typography-edit-content\": \"editing\", \"class.ant-typography-secondary\": \"nzType === \\\"secondary\\\"\", \"class.ant-typography-warning\": \"nzType === \\\"warning\\\"\", \"class.ant-typography-danger\": \"nzType === \\\"danger\\\"\", \"class.ant-typography-success\": \"nzType === \\\"success\\\"\", \"class.ant-typography-disabled\": \"nzDisabled\", \"class.ant-typography-ellipsis\": \"nzEllipsis && !expanded\", \"class.ant-typography-single-line\": \"nzEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-single-line\": \"canCssEllipsis && nzEllipsisRows === 1\", \"class.ant-typography-ellipsis-multiple-line\": \"canCssEllipsis && nzEllipsisRows > 1\", \"style.-webkit-line-clamp\": \"(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null\" } }, viewQueries: [{ propertyName: \"textEditRef\", first: true, predicate: NzTextEditComponent, descendants: true }, { propertyName: \"textCopyRef\", first: true, predicate: NzTextCopyComponent, descendants: true }, { propertyName: \"ellipsisContainer\", first: true, predicate: [\"ellipsisContainer\"], descendants: true }, { propertyName: \"expandableBtn\", first: true, predicate: [\"expandable\"], descendants: true }, { propertyName: \"contentTemplate\", first: true, predicate: [\"contentTemplate\"], descendants: true }], exportAs: [\"nzTypography\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i6$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i6$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: NzTextCopyComponent, selector: \"nz-text-copy\", inputs: [\"text\", \"tooltips\", \"icons\"], outputs: [\"textCopy\"], exportAs: [\"nzTextCopy\"] }, { kind: \"component\", type: NzTextEditComponent, selector: \"nz-text-edit\", inputs: [\"text\", \"icon\", \"tooltip\"], outputs: [\"startEditing\", \"endEditing\"], exportAs: [\"nzTextEdit\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzCopyable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEditable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzExpandable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTypographyComponent.prototype, \"nzEllipsis\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyTooltips\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzCopyIcons\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditTooltip\", void 0);\n__decorate([\n    WithConfig()\n], NzTypographyComponent.prototype, \"nzEditIcon\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber()\n], NzTypographyComponent.prototype, \"nzEllipsisRows\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTypographyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: `\n  nz-typography,\n  [nz-typography],\n  p[nz-paragraph],\n  span[nz-text],\n  h1[nz-title], h2[nz-title], h3[nz-title], h4[nz-title]\n  `,\n                    exportAs: 'nzTypography',\n                    template: `\n    <ng-template #contentTemplate let-content=\"content\">\n      <ng-content *ngIf=\"!content\"></ng-content>\n      {{ content }}\n    </ng-template>\n    <ng-container *ngIf=\"!editing\">\n      <ng-container\n        *ngIf=\"\n          expanded ||\n            (!hasOperationsWithEllipsis && nzEllipsisRows === 1 && !hasEllipsisObservers) ||\n            canCssEllipsis ||\n            (nzSuffix && expanded);\n          else jsEllipsis\n        \"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"contentTemplate\"\n          [ngTemplateOutletContext]=\"{ content: nzContent }\"\n        ></ng-template>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n      </ng-container>\n      <ng-template #jsEllipsis>\n        <span #ellipsisContainer></span>\n        <ng-container *ngIf=\"isEllipsis\">{{ ellipsisStr }}</ng-container>\n        <ng-container *ngIf=\"nzSuffix\">{{ nzSuffix }}</ng-container>\n        <a #expandable *ngIf=\"nzExpandable && isEllipsis\" class=\"ant-typography-expand\" (click)=\"onExpand()\">\n          {{ locale?.expand }}\n        </a>\n      </ng-template>\n    </ng-container>\n\n    <nz-text-edit\n      *ngIf=\"nzEditable\"\n      [text]=\"nzContent\"\n      [icon]=\"nzEditIcon\"\n      [tooltip]=\"nzEditTooltip\"\n      (endEditing)=\"onEndEditing($event)\"\n      (startEditing)=\"onStartEditing()\"\n    ></nz-text-edit>\n\n    <nz-text-copy\n      *ngIf=\"nzCopyable && !editing\"\n      [text]=\"copyText\"\n      [tooltips]=\"nzCopyTooltips\"\n      [icons]=\"nzCopyIcons\"\n      (textCopy)=\"onTextCopy($event)\"\n    ></nz-text-copy>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    host: {\n                        '[class.ant-typography]': '!editing',\n                        '[class.ant-typography-rtl]': 'dir === \"rtl\"',\n                        '[class.ant-typography-edit-content]': 'editing',\n                        '[class.ant-typography-secondary]': 'nzType === \"secondary\"',\n                        '[class.ant-typography-warning]': 'nzType === \"warning\"',\n                        '[class.ant-typography-danger]': 'nzType === \"danger\"',\n                        '[class.ant-typography-success]': 'nzType === \"success\"',\n                        '[class.ant-typography-disabled]': 'nzDisabled',\n                        '[class.ant-typography-ellipsis]': 'nzEllipsis && !expanded',\n                        '[class.ant-typography-single-line]': 'nzEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-single-line]': 'canCssEllipsis && nzEllipsisRows === 1',\n                        '[class.ant-typography-ellipsis-multiple-line]': 'canCssEllipsis && nzEllipsisRows > 1',\n                        '[style.-webkit-line-clamp]': '(canCssEllipsis && nzEllipsisRows > 1) ? nzEllipsisRows : null'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.NzConfigService }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i2$2.Platform }, { type: i2.NzI18nService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2$1.NzResizeService }, { type: i5$1.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzCopyable: [{\n                type: Input\n            }], nzEditable: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzExpandable: [{\n                type: Input\n            }], nzEllipsis: [{\n                type: Input\n            }], nzCopyTooltips: [{\n                type: Input\n            }], nzCopyIcons: [{\n                type: Input\n            }], nzEditTooltip: [{\n                type: Input\n            }], nzEditIcon: [{\n                type: Input\n            }], nzContent: [{\n                type: Input\n            }], nzEllipsisRows: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzCopyText: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzContentChange: [{\n                type: Output\n            }], nzCopy: [{\n                type: Output\n            }], nzExpandChange: [{\n                type: Output\n            }], nzOnEllipsis: [{\n                type: Output\n            }], textEditRef: [{\n                type: ViewChild,\n                args: [NzTextEditComponent, { static: false }]\n            }], textCopyRef: [{\n                type: ViewChild,\n                args: [NzTextCopyComponent, { static: false }]\n            }], ellipsisContainer: [{\n                type: ViewChild,\n                args: ['ellipsisContainer', { static: false }]\n            }], expandableBtn: [{\n                type: ViewChild,\n                args: ['expandable', { static: false }]\n            }], contentTemplate: [{\n                type: ViewChild,\n                args: ['contentTemplate', { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTypographyModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTypographyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTypographyModule, declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent], imports: [BidiModule,\n            CommonModule,\n            NzIconModule,\n            NzToolTipModule,\n            NzInputModule,\n            NzI18nModule,\n            NzTransButtonModule,\n            ClipboardModule,\n            NzOutletModule], exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTypographyModule, imports: [BidiModule,\n            CommonModule,\n            NzIconModule,\n            NzToolTipModule,\n            NzInputModule,\n            NzI18nModule,\n            NzTransButtonModule,\n            ClipboardModule,\n            NzOutletModule, PlatformModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTypographyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        NzIconModule,\n                        NzToolTipModule,\n                        NzInputModule,\n                        NzI18nModule,\n                        NzTransButtonModule,\n                        ClipboardModule,\n                        NzOutletModule\n                    ],\n                    exports: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent, PlatformModule],\n                    declarations: [NzTypographyComponent, NzTextCopyComponent, NzTextEditComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTextCopyComponent, NzTextEditComponent, NzTypographyComponent, NzTypographyModule };\n"],"names":["DOCUMENT","i0","Injectable","Inject","InjectionToken","EventEmitter","Directive","Optional","Input","Output","NgModule","PendingCopy","constructor","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","fullscreenElement","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","_","ɵfac","Clipboard_Factory","t","ɵɵinject","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","config","attempts","copied","_pending","Set","remainingAttempts","pending","add","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","delete","emit","ngOnDestroy","clearTimeout","forEach","clear","CdkCopyToClipboard_Factory","ɵɵdirectiveInject","NgZone","ɵdir","ɵɵdefineDirective","selectors","hostBindings","CdkCopyToClipboard_HostBindings","rf","ctx","ɵɵlistener","CdkCopyToClipboard_click_HostBindingHandler","inputs","outputs","selector","host","ClipboardModule","ClipboardModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","declarations","exports","CommonModule","NzTransButtonDirective","NzTransButtonDirective_Factory","hostVars","NzTransButtonDirective_HostBindings","ɵɵstyleProp","NzTransButtonModule","NzTransButtonModule_Factory","imports","i5$1","BidiModule","i1","i2$2","PlatformModule","i6$1","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","i6","NzOutletModule","i5","i2","NzI18nModule","i3","NzIconModule","i6$2","NzAutosizeDirective","NzInputModule","i4","NzToolTipModule","Subject","BehaviorSubject","Observable","fromEvent","EMPTY","from","Subscription","takeUntil","switchMap","take","withLatestFrom","ESCAPE","ENTER","i2$1","NzDestroyService","__decorate","i1$1","WithConfig","cancelRequestAnimationFrame","reqAnimFrame","isStyleSupport","measure","InputBoolean","InputNumber","NzTextCopyComponent_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","icon_r1","$implicit","ɵɵadvance","ɵɵproperty","_c0","NzTextEditComponent_ng_template_0_Template","_r5","ɵɵgetCurrentView","ɵɵelementStart","NzTextEditComponent_ng_template_0_Template_textarea_blur_0_listener","ɵɵrestoreView","ctx_r4","ɵɵnextContext","ɵɵresetView","confirm","ɵɵelementEnd","NzTextEditComponent_ng_template_0_Template_button_click_2_listener","ctx_r6","NzTextEditComponent_ng_template_1_ng_container_1_Template","icon_r8","NzTextEditComponent_ng_template_1_Template","_r10","NzTextEditComponent_ng_template_1_Template_button_click_0_listener","ctx_r9","onClick","ɵɵtemplate","ctx_r2","tooltip","locale","edit","icon","_c1","_c2","_c3","NzTypographyComponent_ng_template_0_ng_content_0_Template","ɵɵprojection","NzTypographyComponent_ng_template_0_Template","ɵɵtext","content_r5","content","ɵɵtextInterpolate1","NzTypographyComponent_ng_container_2_ng_container_1_ng_template_1_Template","NzTypographyComponent_ng_container_2_ng_container_1_ng_container_2_Template","ctx_r11","ɵɵtextInterpolate","nzSuffix","_c4","a0","NzTypographyComponent_ng_container_2_ng_container_1_Template","ctx_r7","_r0","ɵɵreference","ɵɵpureFunction1","nzContent","NzTypographyComponent_ng_container_2_ng_template_2_ng_container_2_Template","ctx_r13","ellipsisStr","NzTypographyComponent_ng_container_2_ng_template_2_ng_container_3_Template","ctx_r14","NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template","_r18","NzTypographyComponent_ng_container_2_ng_template_2_a_4_Template_a_click_0_listener","ctx_r17","onExpand","ctx_r15","expand","NzTypographyComponent_ng_container_2_ng_template_2_Template","isEllipsis","nzExpandable","NzTypographyComponent_ng_container_2_Template","ɵɵtemplateRefExtractor","_r8","expanded","hasOperationsWithEllipsis","nzEllipsisRows","hasEllipsisObservers","canCssEllipsis","NzTypographyComponent_nz_text_edit_3_Template","_r20","NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_endEditing_0_listener","$event","ctx_r19","onEndEditing","NzTypographyComponent_nz_text_edit_3_Template_nz_text_edit_startEditing_0_listener","ctx_r21","onStartEditing","ctx_r3","nzEditIcon","nzEditTooltip","NzTypographyComponent_nz_text_copy_4_Template","_r23","NzTypographyComponent_nz_text_copy_4_Template_nz_text_copy_textCopy_0_listener","ctx_r22","onTextCopy","copyText","nzCopyTooltips","nzCopyIcons","_c5","NzTextCopyComponent","cdr","clipboard","i18n","copyId","nativeElement","copyTooltip","copedTooltip","copyIcon","copedIcon","destroy$","icons","textCopy","ngOnInit","localeChange","pipe","subscribe","getLocaleData","updateTooltips","markForCheck","ngOnChanges","changes","tooltips","updateIcons","next","complete","detectChanges","onCopied","Array","isArray","NzTextCopyComponent_Factory","ElementRef","ChangeDetectorRef","NzI18nService","ɵcmp","ɵɵdefineComponent","exportAs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NzTextCopyComponent_Template","NzTextCopyComponent_Template_button_click_0_listener","ɵɵclassProp","dependencies","NzIconDirective","NzTooltipDirective","NzStringTemplateOutletDirective","encapsulation","changeDetection","OnPush","None","preserveWhitespaces","NzTextEditComponent","textarea$","ngZone","editing","startEditing","endEditing","subscriber","event","keyCode","run","onCancel","onEnter","currentText","target","beforeText","focusAndSetValue","stopPropagation","preventDefault","onStable$","isStable","Promise","resolve","onStable","autosizeDirective","resizeToFitContent","NzTextEditComponent_Factory","viewQuery","NzTextEditComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","ɵɵProvidersFeature","NzTextEditComponent_Template","_r1","NgIf","NzInputDirective","providers","static","NZ_CONFIG_MODULE_NAME","EXPAND_ELEMENT_CLASSNAME","NzTypographyComponent","nzOnEllipsis","observers","nzEllipsis","cssEllipsis","nzCopyable","nzEditable","nzCopyText","nzConfigService","viewContainerRef","renderer","platform","resizeService","directionality","_nzModuleName","nzDisabled","nzContentChange","nzCopy","nzExpandChange","expandableBtnElementCache","dir","viewInit","rfaId","windowResizeSubscription","renderOnNextFrame","canUseCSSEllipsis","isBrowser","syncEllipsis","getOriginContentViewRef","viewRef","createEmbeddedView","contentTemplate","removeView","indexOf","fixedNodes","textCopyRef","textEditRef","filter","e","map","expandableBtnElement","getExpandableBtnElement","push","contentNodes","ellipsis","rootNodes","ellipsisText","ellipsisContainerNativeElement","ellipsisContainer","firstChild","removeChild","n","cloneNode","expandText","cache","innerText","el","className","renderAndSubscribeWindowResize","unsubscribe","change","direction","ngAfterViewInit","NzTypographyComponent_Factory","NzConfigService","ViewContainerRef","Renderer2","Platform","NzResizeService","Directionality","NzTypographyComponent_Query","expandableBtn","NzTypographyComponent_HostBindings","nzType","ngContentSelectors","NzTypographyComponent_Template","ɵɵprojectionDef","NgTemplateOutlet","prototype","NzTypographyModule","NzTypographyModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2]}