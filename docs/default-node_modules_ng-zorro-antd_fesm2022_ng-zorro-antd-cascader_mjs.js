"use strict";
(self["webpackChunkhexadash"] = self["webpackChunkhexadash"] || []).push([["default-node_modules_ng-zorro-antd_fesm2022_ng-zorro-antd-cascader_mjs"],{

/***/ 66624:
/*!************************************************************************!*\
  !*** ./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-cascader.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NzCascaderComponent: () => (/* binding */ NzCascaderComponent),
/* harmony export */   NzCascaderModule: () => (/* binding */ NzCascaderModule),
/* harmony export */   NzCascaderOptionComponent: () => (/* binding */ NzCascaderOptionComponent),
/* harmony export */   NzCascaderService: () => (/* binding */ NzCascaderService),
/* harmony export */   isChildOption: () => (/* binding */ isChildOption),
/* harmony export */   isParentOption: () => (/* binding */ isParentOption),
/* harmony export */   isShowSearchObject: () => (/* binding */ isShowSearchObject)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/cdk/keycodes */ 30554);
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/cdk/overlay */ 72698);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 61699);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/forms */ 28849);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 58071);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 72513);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 56231);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 84980);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 12235);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 59016);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 16290);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 17474);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 53317);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 58989);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ 79736);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 20274);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ 75043);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs/operators */ 81891);
/* harmony import */ var ng_zorro_antd_core_animation__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ng-zorro-antd/core/animation */ 251);
/* harmony import */ var ng_zorro_antd_core_config__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ng-zorro-antd/core/config */ 28931);
/* harmony import */ var ng_zorro_antd_core_overlay__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ng-zorro-antd/core/overlay */ 60506);
/* harmony import */ var ng_zorro_antd_core_services__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ng-zorro-antd/core/services */ 45118);
/* harmony import */ var ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ng-zorro-antd/core/util */ 91636);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 26575);
/* harmony import */ var ng_zorro_antd_core_outlet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ng-zorro-antd/core/outlet */ 26672);
/* harmony import */ var ng_zorro_antd_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ng-zorro-antd/icon */ 84740);
/* harmony import */ var ng_zorro_antd_core_highlight__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ng-zorro-antd/core/highlight */ 67369);
/* harmony import */ var ng_zorro_antd_i18n__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ng-zorro-antd/i18n */ 44336);
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/cdk/bidi */ 24565);
/* harmony import */ var ng_zorro_antd_core_no_animation__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ng-zorro-antd/core/no-animation */ 86424);
/* harmony import */ var ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ng-zorro-antd/core/form */ 40375);
/* harmony import */ var ng_zorro_antd_empty__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ng-zorro-antd/empty */ 10431);
/* harmony import */ var ng_zorro_antd_input__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ng-zorro-antd/input */ 27852);





































/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
const _c0 = ["nz-cascader-option", ""];
function NzCascaderOptionComponent_ng_container_0_ng_template_1_Template(rf, ctx) {}
const _c1 = function (a0, a1) {
  return {
    $implicit: a0,
    index: a1
  };
};
function NzCascaderOptionComponent_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NzCascaderOptionComponent_ng_container_0_ng_template_1_Template, 0, 0, "ng-template", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.optionTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](2, _c1, ctx_r0.option, ctx_r0.columnIndex));
  }
}
function NzCascaderOptionComponent_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "nzHighlight");
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHTML", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind4"](1, 1, ctx_r2.optionLabel, ctx_r2.highlightText, "g", "ant-cascader-menu-item-keyword"), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
  }
}
function NzCascaderOptionComponent_div_3_span_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 8);
  }
}
function NzCascaderOptionComponent_div_3_ng_template_2_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("nzType", ctx_r8.expandIcon);
  }
}
function NzCascaderOptionComponent_div_3_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, NzCascaderOptionComponent_div_3_ng_template_2_ng_container_0_Template, 2, 1, "ng-container", 9);
  }
  if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("nzStringTemplateOutlet", ctx_r7.expandIcon);
  }
}
function NzCascaderOptionComponent_div_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NzCascaderOptionComponent_div_3_span_1_Template, 1, 0, "span", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, NzCascaderOptionComponent_div_3_ng_template_2_Template, 1, 1, "ng-template", null, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r3.option.loading)("ngIfElse", _r6);
  }
}
const _c2 = ["selectContainer"];
const _c3 = ["input"];
const _c4 = ["menu"];
function NzCascaderComponent_ng_container_3_span_6_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r10.labelRenderText);
  }
}
function NzCascaderComponent_ng_container_3_span_6_ng_template_2_ng_template_0_Template(rf, ctx) {}
function NzCascaderComponent_ng_container_3_span_6_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, NzCascaderComponent_ng_container_3_span_6_ng_template_2_ng_template_0_Template, 0, 0, "ng-template", 16);
  }
  if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r12.nzLabelRender)("ngTemplateOutletContext", ctx_r12.labelRenderContext);
  }
}
function NzCascaderComponent_ng_container_3_span_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NzCascaderComponent_ng_container_3_span_6_ng_container_1_Template, 2, 1, "ng-container", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, NzCascaderComponent_ng_container_3_span_6_ng_template_2_Template, 1, 2, "ng-template", null, 15, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", ctx_r6.labelRenderText);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r6.isLabelRenderTemplate)("ngIfElse", _r11);
  }
}
function NzCascaderComponent_ng_container_3_span_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("visibility", !ctx_r7.inputValue ? "visible" : "hidden");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r7.showPlaceholder ? ctx_r7.nzPlaceHolder || (ctx_r7.locale == null ? null : ctx_r7.locale.placeholder) : null);
  }
}
function NzCascaderComponent_ng_container_3_span_8_span_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 22);
  }
  if (rf & 2) {
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ant-cascader-picker-arrow-expand", ctx_r14.menuVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("nzType", ctx_r14.nzSuffixIcon);
  }
}
function NzCascaderComponent_ng_container_3_span_8_span_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 23);
  }
}
function NzCascaderComponent_ng_container_3_span_8_nz_form_item_feedback_icon_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "nz-form-item-feedback-icon", 24);
  }
  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("status", ctx_r16.status);
  }
}
function NzCascaderComponent_ng_container_3_span_8_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NzCascaderComponent_ng_container_3_span_8_span_1_Template, 1, 3, "span", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, NzCascaderComponent_ng_container_3_span_8_span_2_Template, 1, 0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NzCascaderComponent_ng_container_3_span_8_nz_form_item_feedback_icon_3_Template, 1, 1, "nz-form-item-feedback-icon", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ant-select-arrow-loading", ctx_r8.isLoading);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r8.isLoading);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r8.isLoading);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r8.hasFeedback && !!ctx_r8.status);
  }
}
function NzCascaderComponent_ng_container_3_span_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 25)(1, "span", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function NzCascaderComponent_ng_container_3_span_9_Template_span_click_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r18);
      const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r17.clearSelection($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
}
function NzCascaderComponent_ng_container_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 4, 5)(3, "span", 6)(4, "input", 7, 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function NzCascaderComponent_ng_container_3_Template_input_ngModelChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r20);
      const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r19.inputValue = $event);
    })("blur", function NzCascaderComponent_ng_container_3_Template_input_blur_4_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r20);
      const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r21.handleInputBlur());
    })("focus", function NzCascaderComponent_ng_container_3_Template_input_focus_4_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r20);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r22.handleInputFocus());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, NzCascaderComponent_ng_container_3_span_6_Template, 4, 3, "span", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, NzCascaderComponent_ng_container_3_span_7_Template, 2, 3, "span", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, NzCascaderComponent_ng_container_3_span_8_Template, 4, 5, "span", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, NzCascaderComponent_ng_container_3_span_9_Template, 2, 0, "span", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("opacity", ctx_r2.nzShowSearch ? "" : "0");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readonly", !ctx_r2.nzShowSearch)("disabled", ctx_r2.nzDisabled)("ngModel", ctx_r2.inputValue);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("autoComplete", "off")("expanded", ctx_r2.menuVisible)("autofocus", ctx_r2.nzAutoFocus ? "autofocus" : null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.showLabelRender);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r2.showLabelRender);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.nzShowArrow);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.clearIconVisible);
  }
}
function NzCascaderComponent_ng_template_5_ul_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ul", 32)(1, "li", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "nz-embed-empty", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx_r24.dropdownWidthStyle)("height", ctx_r24.dropdownHeightStyle);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("nzComponentName", "cascader")("specificContent", ctx_r24.nzNotFoundContent);
  }
}
function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mouseenter", function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template_li_mouseenter_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r33);
      const option_r31 = restoredCtx.$implicit;
      const i_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r32.onOptionMouseEnter(option_r31, i_r29, $event));
    })("mouseleave", function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template_li_mouseleave_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r33);
      const option_r31 = restoredCtx.$implicit;
      const i_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;
      const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r35.onOptionMouseLeave(option_r31, i_r29, $event));
    })("click", function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template_li_click_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r33);
      const option_r31 = restoredCtx.$implicit;
      const i_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;
      const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r37.onOptionClick(option_r31, i_r29, $event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const option_r31 = ctx.$implicit;
    const i_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("expandIcon", ctx_r30.nzExpandIcon)("columnIndex", i_r29)("nzLabelProperty", ctx_r30.nzLabelProperty)("optionTemplate", ctx_r30.nzOptionRender)("activated", ctx_r30.isOptionActivated(option_r31, i_r29))("highlightText", ctx_r30.inSearchingMode ? ctx_r30.inputValue : "")("option", option_r31)("dir", ctx_r30.dir);
  }
}
function NzCascaderComponent_ng_template_5_ng_template_4_ul_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ul", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NzCascaderComponent_ng_template_5_ng_template_4_ul_0_li_1_Template, 1, 8, "li", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const options_r28 = ctx.$implicit;
    const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("height", ctx_r27.dropdownHeightStyle)("width", ctx_r27.dropdownWidthStyle);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r27.menuColumnCls);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", options_r28);
  }
}
function NzCascaderComponent_ng_template_5_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, NzCascaderComponent_ng_template_5_ng_template_4_ul_0_Template, 2, 6, "ul", 35);
  }
  if (rf & 2) {
    const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r26.cascaderService.columns);
  }
}
function NzCascaderComponent_ng_template_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mouseenter", function NzCascaderComponent_ng_template_5_Template_div_mouseenter_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r41);
      const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r40.onTriggerMouseEnter());
    })("mouseleave", function NzCascaderComponent_ng_template_5_Template_div_mouseleave_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r41);
      const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r42.onTriggerMouseLeave($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 28, 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NzCascaderComponent_ng_template_5_ul_3_Template, 3, 6, "ul", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, NzCascaderComponent_ng_template_5_ng_template_4_Template, 1, 1, "ng-template", null, 31, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](5);
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ant-cascader-dropdown-rtl", ctx_r3.dir === "rtl");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("@slideMotion", "enter")("@.disabled", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation))("nzNoAnimation", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ant-cascader-rtl", ctx_r3.dir === "rtl")("ant-cascader-menus-hidden", !ctx_r3.menuVisible)("ant-cascader-menu-empty", ctx_r3.shouldShowEmpty);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r3.menuCls)("ngStyle", ctx_r3.nzMenuStyle);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r3.shouldShowEmpty)("ngIfElse", _r25);
  }
}
const _c5 = ["*"];
function isShowSearchObject(options) {
  return typeof options !== 'boolean';
}

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
function isChildOption(o) {
  return o.isLeaf || !o.children || !o.children.length;
}
function isParentOption(o) {
  return !!o.children && !!o.children.length && !o.isLeaf;
}
class NzCascaderOptionComponent {
  constructor(cdr, elementRef) {
    this.cdr = cdr;
    this.optionTemplate = null;
    this.activated = false;
    this.nzLabelProperty = 'label';
    this.expandIcon = '';
    this.dir = 'ltr';
    this.nativeElement = elementRef.nativeElement;
  }
  ngOnInit() {
    if (this.expandIcon === '' && this.dir === 'rtl') {
      this.expandIcon = 'left';
    } else if (this.expandIcon === '') {
      this.expandIcon = 'right';
    }
  }
  get optionLabel() {
    return this.option[this.nzLabelProperty];
  }
  markForCheck() {
    this.cdr.markForCheck();
  }
  static #_ = this.ɵfac = function NzCascaderOptionComponent_Factory(t) {
    return new (t || NzCascaderOptionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: NzCascaderOptionComponent,
    selectors: [["", "nz-cascader-option", ""]],
    hostAttrs: [1, "ant-cascader-menu-item", "ant-cascader-menu-item-expanded"],
    hostVars: 7,
    hostBindings: function NzCascaderOptionComponent_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("title", ctx.option.title || ctx.optionLabel);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ant-cascader-menu-item-active", ctx.activated)("ant-cascader-menu-item-expand", !ctx.option.isLeaf)("ant-cascader-menu-item-disabled", ctx.option.disabled);
      }
    },
    inputs: {
      optionTemplate: "optionTemplate",
      option: "option",
      activated: "activated",
      highlightText: "highlightText",
      nzLabelProperty: "nzLabelProperty",
      columnIndex: "columnIndex",
      expandIcon: "expandIcon",
      dir: "dir"
    },
    exportAs: ["nzCascaderOption"],
    attrs: _c0,
    decls: 4,
    vars: 3,
    consts: [[4, "ngIf", "ngIfElse"], ["defaultOptionTemplate", ""], ["class", "ant-cascader-menu-item-expand-icon", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "ant-cascader-menu-item-content", 3, "innerHTML"], [1, "ant-cascader-menu-item-expand-icon"], ["nz-icon", "", "nzType", "loading", 4, "ngIf", "ngIfElse"], ["icon", ""], ["nz-icon", "", "nzType", "loading"], [4, "nzStringTemplateOutlet"], ["nz-icon", "", 3, "nzType"]],
    template: function NzCascaderOptionComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, NzCascaderOptionComponent_ng_container_0_Template, 2, 5, "ng-container", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NzCascaderOptionComponent_ng_template_1_Template, 2, 6, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NzCascaderOptionComponent_div_3_Template, 4, 2, "div", 2);
      }
      if (rf & 2) {
        const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.optionTemplate)("ngIfElse", _r1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.option.isLeaf || (ctx.option.children == null ? null : ctx.option.children.length) || ctx.option.loading);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgTemplateOutlet, ng_zorro_antd_core_outlet__WEBPACK_IMPORTED_MODULE_2__.NzStringTemplateOutletDirective, ng_zorro_antd_icon__WEBPACK_IMPORTED_MODULE_3__.NzIconDirective, ng_zorro_antd_core_highlight__WEBPACK_IMPORTED_MODULE_4__.NzHighlightPipe],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NzCascaderOptionComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      selector: '[nz-cascader-option]',
      exportAs: 'nzCascaderOption',
      template: `
    <ng-container *ngIf="optionTemplate; else defaultOptionTemplate">
      <ng-template
        [ngTemplateOutlet]="optionTemplate"
        [ngTemplateOutletContext]="{ $implicit: option, index: columnIndex }"
      ></ng-template>
    </ng-container>
    <ng-template #defaultOptionTemplate>
      <div
        class="ant-cascader-menu-item-content"
        [innerHTML]="optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'"
      ></div>
    </ng-template>
    <div *ngIf="!option.isLeaf || option.children?.length || option.loading" class="ant-cascader-menu-item-expand-icon">
      <span *ngIf="option.loading; else icon" nz-icon nzType="loading"></span>
      <ng-template #icon>
        <ng-container *nzStringTemplateOutlet="expandIcon">
          <span nz-icon [nzType]="$any(expandIcon)"></span>
        </ng-container>
      </ng-template>
    </div>
  `,
      host: {
        class: 'ant-cascader-menu-item ant-cascader-menu-item-expanded',
        '[attr.title]': 'option.title || optionLabel',
        '[class.ant-cascader-menu-item-active]': 'activated',
        '[class.ant-cascader-menu-item-expand]': '!option.isLeaf',
        '[class.ant-cascader-menu-item-disabled]': 'option.disabled'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, {
    optionTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    option: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    activated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    highlightText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzLabelProperty: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    columnIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    expandIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    dir: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
/**
 * All data is stored and parsed in NzCascaderService.
 */
class NzCascaderService {
  constructor() {
    /** Activated options in each column. */
    this.activatedOptions = [];
    /** An array to store cascader items arranged in different layers. */
    this.columns = [];
    /** If user has entered searching mode. */
    this.inSearchingMode = false;
    /** Selected options would be output to user. */
    this.selectedOptions = [];
    this.values = [];
    this.$loading = new rxjs__WEBPACK_IMPORTED_MODULE_5__.BehaviorSubject(false);
    /**
     * Emit an event to notify cascader it needs to redraw because activated or
     * selected options are changed.
     */
    this.$redraw = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
    /**
     * Emit an event when an option gets selected.
     * Emit true if a leaf options is selected.
     */
    this.$optionSelected = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
    /**
     * Emit an event to notify cascader it needs to quit searching mode.
     * Only emit when user do select a searching option.
     */
    this.$quitSearching = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
    /** To hold columns before entering searching mode. */
    this.columnsSnapshot = [[]];
    /** To hold activated options before entering searching mode. */
    this.activatedOptionsSnapshot = [];
  }
  /** Return cascader options in the first layer. */
  get nzOptions() {
    return this.columns[0];
  }
  ngOnDestroy() {
    this.$redraw.complete();
    this.$quitSearching.complete();
    this.$optionSelected.complete();
    this.$loading.complete();
  }
  /**
   * Make sure that value matches what is displayed in the dropdown.
   */
  syncOptions(first = false) {
    const values = this.values;
    const hasValue = values && values.length;
    const lastColumnIndex = values.length - 1;
    const initColumnWithIndex = columnIndex => {
      const activatedOptionSetter = () => {
        const currentValue = values[columnIndex];
        if (!(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.isNotNil)(currentValue)) {
          this.$redraw.next();
          return;
        }
        const option = this.findOptionWithValue(columnIndex, values[columnIndex]) || (typeof currentValue === 'object' ? currentValue : {
          [`${this.cascaderComponent.nzValueProperty}`]: currentValue,
          [`${this.cascaderComponent.nzLabelProperty}`]: currentValue
        });
        this.setOptionActivated(option, columnIndex, false, false);
        if (columnIndex < lastColumnIndex) {
          initColumnWithIndex(columnIndex + 1);
        } else {
          this.dropBehindColumns(columnIndex);
          this.selectedOptions = [...this.activatedOptions];
          this.$redraw.next();
        }
      };
      if (this.isLoaded(columnIndex) || !this.cascaderComponent.nzLoadData) {
        activatedOptionSetter();
      } else {
        const option = this.activatedOptions[columnIndex - 1] || {};
        this.loadChildren(option, columnIndex - 1, activatedOptionSetter);
      }
    };
    this.activatedOptions = [];
    this.selectedOptions = [];
    if (first && this.cascaderComponent.nzLoadData && !hasValue) {
      // Should also notify the component that value changes. Fix #3480.
      this.$redraw.next();
      return;
    } else {
      initColumnWithIndex(0);
    }
  }
  /**
   * Bind cascader component so this service could use inputs.
   */
  withComponent(cascaderComponent) {
    this.cascaderComponent = cascaderComponent;
  }
  /**
   * Reset all options. Rebuild searching options if in searching mode.
   */
  withOptions(options) {
    this.columnsSnapshot = this.columns = options && options.length ? [options] : [];
    if (this.inSearchingMode) {
      this.prepareSearchOptions(this.cascaderComponent.inputValue);
    } else if (this.columns.length) {
      this.syncOptions();
    }
  }
  /**
   * Try to set a option as activated.
   *
   * @param option Cascader option
   * @param columnIndex Of which column this option is in
   * @param performSelect Select
   * @param loadingChildren Try to load children asynchronously.
   */
  setOptionActivated(option, columnIndex, performSelect = false, loadingChildren = true) {
    if (option.disabled) {
      return;
    }
    this.activatedOptions[columnIndex] = option;
    this.trackAncestorActivatedOptions(columnIndex);
    this.dropBehindActivatedOptions(columnIndex);
    const isParent = isParentOption(option);
    if (isParent) {
      // Parent option that has children.
      this.setColumnData(option.children, columnIndex + 1, option);
    } else if (!option.isLeaf && loadingChildren) {
      // Parent option that should try to load children asynchronously.
      this.loadChildren(option, columnIndex);
    } else if (option.isLeaf) {
      // Leaf option.
      this.dropBehindColumns(columnIndex);
    }
    // Actually perform selection to make an options not only activated but also selected.
    if (performSelect) {
      this.setOptionSelected(option, columnIndex);
    }
    this.$redraw.next();
  }
  setOptionSelected(option, index) {
    const changeOn = this.cascaderComponent.nzChangeOn;
    const shouldPerformSelection = (o, i) => typeof changeOn === 'function' ? changeOn(o, i) : false;
    if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {
      this.selectedOptions = [...this.activatedOptions];
      this.prepareEmitValue();
      this.$redraw.next();
      this.$optionSelected.next({
        option,
        index
      });
    }
  }
  setOptionDeactivatedSinceColumn(column) {
    this.dropBehindActivatedOptions(column - 1);
    this.dropBehindColumns(column);
    this.$redraw.next();
  }
  /**
   * Set a searching option as selected, finishing up things.
   *
   * @param option
   */
  setSearchOptionSelected(option) {
    this.activatedOptions = [option];
    this.selectedOptions = [...option.path];
    this.prepareEmitValue();
    this.$redraw.next();
    this.$optionSelected.next({
      option,
      index: 0
    });
    setTimeout(() => {
      // Reset data and tell UI only to remove input and reset dropdown width style.
      this.$quitSearching.next();
      this.$redraw.next();
      this.inSearchingMode = false;
      this.columns = [...this.columnsSnapshot];
      this.activatedOptions = [...this.selectedOptions];
    }, 200);
  }
  /**
   * Filter cascader options to reset `columns`.
   *
   * @param searchValue The string user wants to search.
   */
  prepareSearchOptions(searchValue) {
    const results = []; // Search results only have one layer.
    const path = [];
    const defaultFilter = (i, p) => p.some(o => {
      const label = this.getOptionLabel(o);
      return !!label && label.indexOf(i) !== -1;
    });
    const showSearch = this.cascaderComponent.nzShowSearch;
    const filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;
    const sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;
    const loopChild = (node, forceDisabled = false) => {
      path.push(node);
      const cPath = Array.from(path);
      if (filter(searchValue, cPath)) {
        const disabled = forceDisabled || node.disabled;
        const option = {
          disabled,
          isLeaf: true,
          path: cPath,
          [this.cascaderComponent.nzLabelProperty]: cPath.map(p => this.getOptionLabel(p)).join(' / ')
        };
        results.push(option);
      }
      path.pop();
    };
    const loopParent = (node, forceDisabled = false) => {
      const disabled = forceDisabled || node.disabled;
      path.push(node);
      node.children.forEach(sNode => {
        if (!sNode.parent) {
          sNode.parent = node;
        }
        if (!sNode.isLeaf) {
          loopParent(sNode, disabled);
        }
        if (sNode.isLeaf || !sNode.children || !sNode.children.length) {
          loopChild(sNode, disabled);
        }
      });
      path.pop();
    };
    if (!this.columnsSnapshot.length) {
      this.columns = [[]];
      return;
    }
    this.columnsSnapshot[0].forEach(o => isChildOption(o) ? loopChild(o) : loopParent(o));
    if (sorter) {
      results.sort((a, b) => sorter(a.path, b.path, searchValue));
    }
    this.columns = [results];
    this.$redraw.next(); // Search results may be empty, so should redraw.
  }
  /**
   * Toggle searching mode by UI. It deals with things not directly related to UI.
   *
   * @param toSearching If this cascader is entering searching mode
   */
  toggleSearchingMode(toSearching) {
    this.inSearchingMode = toSearching;
    if (toSearching) {
      this.activatedOptionsSnapshot = [...this.activatedOptions];
      this.activatedOptions = [];
      this.selectedOptions = [];
      this.$redraw.next();
    } else {
      // User quit searching mode without selecting an option.
      this.activatedOptions = [...this.activatedOptionsSnapshot];
      this.selectedOptions = [...this.activatedOptions];
      this.columns = [...this.columnsSnapshot];
      this.syncOptions();
      this.$redraw.next();
    }
  }
  /**
   * Clear selected options.
   */
  clear() {
    this.values = [];
    this.selectedOptions = [];
    this.activatedOptions = [];
    this.dropBehindColumns(0);
    this.$redraw.next();
    this.$optionSelected.next(null);
  }
  getOptionLabel(o) {
    return o[this.cascaderComponent.nzLabelProperty || 'label'];
  }
  getOptionValue(o) {
    return o[this.cascaderComponent.nzValueProperty || 'value'];
  }
  /**
   * Try to insert options into a column.
   *
   * @param options Options to insert
   * @param columnIndex Position
   */
  setColumnData(options, columnIndex, parent) {
    const existingOptions = this.columns[columnIndex];
    if (!(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.arraysEqual)(existingOptions, options)) {
      options.forEach(o => o.parent = parent);
      this.columns[columnIndex] = options;
      this.dropBehindColumns(columnIndex);
    }
  }
  /**
   * Set all ancestor options as activated.
   */
  trackAncestorActivatedOptions(startIndex) {
    for (let i = startIndex - 1; i >= 0; i--) {
      if (!this.activatedOptions[i]) {
        this.activatedOptions[i] = this.activatedOptions[i + 1].parent;
      }
    }
  }
  dropBehindActivatedOptions(lastReserveIndex) {
    this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);
  }
  dropBehindColumns(lastReserveIndex) {
    if (lastReserveIndex < this.columns.length - 1) {
      this.columns = this.columns.slice(0, lastReserveIndex + 1);
    }
  }
  /**
   * Load children of an option asynchronously.
   */
  loadChildren(option, columnIndex, success, failure) {
    const loadFn = this.cascaderComponent.nzLoadData;
    if (loadFn) {
      // If there isn't any option in columns.
      this.$loading.next(columnIndex < 0);
      if (typeof option === 'object') {
        option.loading = true;
      }
      (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.from)(loadFn(option, columnIndex)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.finalize)(() => {
        option.loading = false;
        this.$loading.next(false);
        this.$redraw.next();
      })).subscribe({
        next: () => {
          if (option.children) {
            this.setColumnData(option.children, columnIndex + 1, option);
          }
          success?.();
        },
        error: () => {
          option.isLeaf = true;
          failure?.();
        }
      });
    }
  }
  isLoaded(index) {
    return this.columns[index] && this.columns[index].length > 0;
  }
  /**
   * Find a option that has a given value in a given column.
   */
  findOptionWithValue(columnIndex, value) {
    const targetColumn = this.columns[columnIndex];
    if (targetColumn) {
      const v = typeof value === 'object' ? this.getOptionValue(value) : value;
      return targetColumn.find(o => v === this.getOptionValue(o));
    }
    return null;
  }
  prepareEmitValue() {
    this.values = this.selectedOptions.map(o => this.getOptionValue(o));
  }
  static #_ = this.ɵfac = function NzCascaderService_Factory(t) {
    return new (t || NzCascaderService)();
  };
  static #_2 = this.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: NzCascaderService,
    factory: NzCascaderService.ɵfac
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NzCascaderService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], null, null);
})();
const NZ_CONFIG_MODULE_NAME = 'cascader';
const defaultDisplayRender = labels => labels.join(' / ');
class NzCascaderComponent {
  set input(input) {
    this.input$.next(input);
  }
  get input() {
    return this.input$.getValue();
  }
  get nzOptions() {
    return this.cascaderService.nzOptions;
  }
  set nzOptions(options) {
    this.cascaderService.withOptions(options);
  }
  get inSearchingMode() {
    return this.cascaderService.inSearchingMode;
  }
  set inputValue(inputValue) {
    this.inputString = inputValue;
    this.toggleSearchingMode(!!inputValue);
  }
  get inputValue() {
    return this.inputString;
  }
  get menuCls() {
    return {
      [`${this.nzMenuClassName}`]: !!this.nzMenuClassName
    };
  }
  get menuColumnCls() {
    return {
      [`${this.nzColumnClassName}`]: !!this.nzColumnClassName
    };
  }
  get hasInput() {
    return !!this.inputValue;
  }
  get hasValue() {
    return this.cascaderService.values && this.cascaderService.values.length > 0;
  }
  get showLabelRender() {
    return this.hasValue;
  }
  get showPlaceholder() {
    return !(this.hasInput || this.hasValue);
  }
  get clearIconVisible() {
    return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);
  }
  get isLabelRenderTemplate() {
    return !!this.nzLabelRender;
  }
  constructor(cascaderService, nzConfigService, ngZone, cdr, i18nService, destroy$, elementRef, renderer, directionality, noAnimation, nzFormStatusService, nzFormNoStatusService) {
    this.cascaderService = cascaderService;
    this.nzConfigService = nzConfigService;
    this.ngZone = ngZone;
    this.cdr = cdr;
    this.i18nService = i18nService;
    this.destroy$ = destroy$;
    this.elementRef = elementRef;
    this.renderer = renderer;
    this.directionality = directionality;
    this.noAnimation = noAnimation;
    this.nzFormStatusService = nzFormStatusService;
    this.nzFormNoStatusService = nzFormNoStatusService;
    this._nzModuleName = NZ_CONFIG_MODULE_NAME;
    /** Used to store the native `<input type="search" />` element since it might be set asynchronously. */
    this.input$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__.BehaviorSubject(undefined);
    this.nzOptionRender = null;
    this.nzShowInput = true;
    this.nzShowArrow = true;
    this.nzAllowClear = true;
    this.nzAutoFocus = false;
    this.nzChangeOnSelect = false;
    this.nzDisabled = false;
    this.nzExpandTrigger = 'click';
    this.nzValueProperty = 'value';
    this.nzLabelRender = null;
    this.nzLabelProperty = 'label';
    this.nzSize = 'default';
    this.nzBackdrop = false;
    this.nzShowSearch = false;
    this.nzPlaceHolder = '';
    this.nzMenuStyle = null;
    this.nzMouseEnterDelay = 150; // ms
    this.nzMouseLeaveDelay = 150; // ms
    this.nzStatus = '';
    this.nzTriggerAction = ['click'];
    // TODO: RTL
    this.nzSuffixIcon = 'down';
    this.nzExpandIcon = '';
    this.nzVisibleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.nzSelectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.nzSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.nzClear = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.prefixCls = 'ant-select';
    this.statusCls = {};
    this.status = '';
    this.hasFeedback = false;
    /**
     * If the dropdown should show the empty content.
     * `true` if there's no options.
     */
    this.shouldShowEmpty = false;
    this.menuVisible = false;
    this.isLoading = false;
    this.labelRenderContext = {};
    this.onChange = Function.prototype;
    this.onTouched = Function.prototype;
    this.positions = [...ng_zorro_antd_core_overlay__WEBPACK_IMPORTED_MODULE_10__.DEFAULT_CASCADER_POSITIONS];
    this.dropdownHeightStyle = '';
    this.isFocused = false;
    this.dir = 'ltr';
    this.inputString = '';
    this.isOpening = false;
    this.delayMenuTimer = null;
    this.delaySelectTimer = null;
    this.isNzDisableFirstChange = true;
    this.el = elementRef.nativeElement;
    this.cascaderService.withComponent(this);
    this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');
    this.renderer.addClass(this.elementRef.nativeElement, 'ant-cascader');
  }
  ngOnInit() {
    this.nzFormStatusService?.formStatusChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.distinctUntilChanged)((pre, cur) => {
      return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;
    }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.withLatestFrom)(this.nzFormNoStatusService ? this.nzFormNoStatusService.noFormStatus : (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.of)(false)), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.map)(([{
      status,
      hasFeedback
    }, noStatus]) => ({
      status: noStatus ? '' : status,
      hasFeedback
    })), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(({
      status,
      hasFeedback
    }) => {
      this.setStatusStyles(status, hasFeedback);
    });
    const srv = this.cascaderService;
    srv.$redraw.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(() => {
      // These operations would not mutate data.
      this.checkChildren();
      this.setDisplayLabel();
      this.cdr.detectChanges();
      this.reposition();
      this.setDropdownStyles();
    });
    srv.$loading.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(loading => {
      this.isLoading = loading;
    });
    srv.$optionSelected.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(data => {
      if (!data) {
        this.onChange([]);
        this.nzSelect.emit(null);
        this.nzSelectionChange.emit([]);
      } else {
        const {
          option,
          index
        } = data;
        const shouldClose = option.isLeaf || this.nzChangeOnSelect && this.nzExpandTrigger === 'hover';
        if (shouldClose) {
          this.delaySetMenuVisible(false);
        }
        this.onChange(this.cascaderService.values);
        this.nzSelectionChange.emit(this.cascaderService.selectedOptions);
        this.nzSelect.emit({
          option,
          index
        });
        this.cdr.markForCheck();
      }
    });
    srv.$quitSearching.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(() => {
      this.inputString = '';
      this.dropdownWidthStyle = '';
    });
    this.i18nService.localeChange.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.startWith)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(() => {
      this.setLocale();
    });
    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(() => {
      this.cdr.markForCheck();
    });
    this.dir = this.directionality.value;
    this.directionality.change.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(() => {
      this.dir = this.directionality.value;
      srv.$redraw.next();
    });
    this.setupChangeListener();
    this.setupKeydownListener();
  }
  ngOnChanges(changes) {
    const {
      nzStatus
    } = changes;
    if (nzStatus) {
      this.setStatusStyles(this.nzStatus, this.hasFeedback);
    }
  }
  ngOnDestroy() {
    this.clearDelayMenuTimer();
    this.clearDelaySelectTimer();
  }
  registerOnChange(fn) {
    this.onChange = fn;
  }
  registerOnTouched(fn) {
    this.onTouched = fn;
  }
  writeValue(value) {
    this.cascaderService.values = (0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.toArray)(value);
    this.cascaderService.syncOptions(true);
  }
  delaySetMenuVisible(visible, delay = 100, setOpening = false) {
    this.clearDelayMenuTimer();
    if (delay) {
      if (visible && setOpening) {
        this.isOpening = true;
      }
      this.delayMenuTimer = setTimeout(() => {
        this.setMenuVisible(visible);
        this.cdr.detectChanges();
        this.clearDelayMenuTimer();
        if (visible) {
          setTimeout(() => {
            this.isOpening = false;
          }, 100);
        }
      }, delay);
    } else {
      this.setMenuVisible(visible);
    }
  }
  setMenuVisible(visible) {
    if (this.nzDisabled || this.menuVisible === visible) {
      return;
    }
    if (visible) {
      this.cascaderService.syncOptions();
      this.scrollToActivatedOptions();
    }
    if (!visible) {
      this.inputValue = '';
    }
    this.menuVisible = visible;
    this.nzVisibleChange.emit(visible);
    this.cdr.detectChanges();
  }
  clearDelayMenuTimer() {
    if (this.delayMenuTimer) {
      clearTimeout(this.delayMenuTimer);
      this.delayMenuTimer = null;
    }
  }
  clearSelection(event) {
    if (event) {
      event.preventDefault();
      event.stopPropagation();
    }
    this.labelRenderText = '';
    this.labelRenderContext = {};
    this.inputValue = '';
    this.setMenuVisible(false);
    this.cascaderService.clear();
    this.nzClear.emit();
  }
  getSubmitValue() {
    return this.cascaderService.selectedOptions.map(o => this.cascaderService.getOptionValue(o));
  }
  focus() {
    if (!this.isFocused) {
      (this.input?.nativeElement || this.el).focus();
      this.isFocused = true;
    }
  }
  blur() {
    if (this.isFocused) {
      (this.input?.nativeElement || this.el).blur();
      this.isFocused = false;
    }
  }
  handleInputBlur() {
    this.menuVisible ? this.focus() : this.blur();
  }
  handleInputFocus() {
    this.focus();
  }
  onTriggerClick() {
    if (this.nzDisabled) {
      return;
    }
    if (this.nzShowSearch) {
      this.focus();
    }
    if (this.isActionTrigger('click')) {
      this.delaySetMenuVisible(!this.menuVisible, 100);
    }
    this.onTouched();
  }
  onTriggerMouseEnter() {
    if (this.nzDisabled || !this.isActionTrigger('hover')) {
      return;
    }
    this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);
  }
  onTriggerMouseLeave(event) {
    if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {
      event.preventDefault();
      return;
    }
    const mouseTarget = event.relatedTarget;
    const hostEl = this.el;
    const menuEl = this.menu && this.menu.nativeElement;
    if (hostEl.contains(mouseTarget) || menuEl && menuEl.contains(mouseTarget)) {
      return;
    }
    this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);
  }
  onOptionMouseEnter(option, columnIndex, event) {
    event.preventDefault();
    if (this.nzExpandTrigger === 'hover') {
      if (!option.isLeaf) {
        this.delaySetOptionActivated(option, columnIndex, false);
      } else {
        this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);
      }
    }
  }
  onOptionMouseLeave(option, _columnIndex, event) {
    event.preventDefault();
    if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {
      this.clearDelaySelectTimer();
    }
  }
  onOptionClick(option, columnIndex, event) {
    if (event) {
      event.preventDefault();
    }
    if (option && option.disabled) {
      return;
    }
    this.el.focus();
    this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(option) : this.cascaderService.setOptionActivated(option, columnIndex, true);
  }
  onClickOutside(event) {
    if (!this.el.contains(event.target)) {
      this.closeMenu();
    }
  }
  isActionTrigger(action) {
    return typeof this.nzTriggerAction === 'string' ? this.nzTriggerAction === action : this.nzTriggerAction.indexOf(action) !== -1;
  }
  onEnter() {
    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);
    const option = this.cascaderService.activatedOptions[columnIndex];
    if (option && !option.disabled) {
      this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(option) : this.cascaderService.setOptionActivated(option, columnIndex, true);
    }
  }
  moveUpOrDown(isUp) {
    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);
    const activeOption = this.cascaderService.activatedOptions[columnIndex];
    const options = this.cascaderService.columns[columnIndex] || [];
    const length = options.length;
    let nextIndex = -1;
    if (!activeOption) {
      // Not selected options in this column
      nextIndex = isUp ? length : -1;
    } else {
      nextIndex = options.indexOf(activeOption);
    }
    while (true) {
      nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;
      if (nextIndex < 0 || nextIndex >= length) {
        break;
      }
      const nextOption = options[nextIndex];
      if (!nextOption || nextOption.disabled) {
        continue;
      }
      this.cascaderService.setOptionActivated(nextOption, columnIndex);
      break;
    }
  }
  moveLeft() {
    const options = this.cascaderService.activatedOptions;
    if (options.length) {
      options.pop(); // Remove the last one
    }
  }

  moveRight() {
    const length = this.cascaderService.activatedOptions.length;
    const options = this.cascaderService.columns[length];
    if (options && options.length) {
      const nextOpt = options.find(o => !o.disabled);
      if (nextOpt) {
        this.cascaderService.setOptionActivated(nextOpt, length);
      }
    }
  }
  clearDelaySelectTimer() {
    if (this.delaySelectTimer) {
      clearTimeout(this.delaySelectTimer);
      this.delaySelectTimer = null;
    }
  }
  delaySetOptionActivated(option, columnIndex, performSelect) {
    this.clearDelaySelectTimer();
    this.delaySelectTimer = setTimeout(() => {
      this.cascaderService.setOptionActivated(option, columnIndex, performSelect);
      this.delaySelectTimer = null;
    }, 150);
  }
  toggleSearchingMode(toSearching) {
    if (this.inSearchingMode !== toSearching) {
      this.cascaderService.toggleSearchingMode(toSearching);
    }
    if (this.inSearchingMode) {
      this.cascaderService.prepareSearchOptions(this.inputValue);
    }
  }
  isOptionActivated(option, index) {
    const activeOpt = this.cascaderService.activatedOptions[index];
    return activeOpt === option;
  }
  setDisabledState(isDisabled) {
    this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || isDisabled;
    this.isNzDisableFirstChange = false;
    if (this.nzDisabled) {
      this.closeMenu();
    }
  }
  closeMenu() {
    this.blur();
    this.clearDelayMenuTimer();
    this.setMenuVisible(false);
  }
  /**
   * Reposition the cascader panel. When a menu opens, the cascader expands
   * and may exceed the boundary of browser's window.
   */
  reposition() {
    if (this.overlay && this.overlay.overlayRef && this.menuVisible) {
      Promise.resolve().then(() => {
        this.overlay.overlayRef.updatePosition();
        this.cdr.markForCheck();
      });
    }
  }
  /**
   * When a cascader options is changed, a child needs to know that it should re-render.
   */
  checkChildren() {
    if (this.cascaderItems) {
      this.cascaderItems.forEach(item => item.markForCheck());
    }
  }
  setDisplayLabel() {
    const selectedOptions = this.cascaderService.selectedOptions;
    const labels = selectedOptions.map(o => this.cascaderService.getOptionLabel(o));
    if (this.isLabelRenderTemplate) {
      this.labelRenderContext = {
        labels,
        selectedOptions
      };
    }
    this.labelRenderText = defaultDisplayRender.call(this, labels);
  }
  setDropdownStyles() {
    const firstColumn = this.cascaderService.columns[0];
    this.shouldShowEmpty = this.inSearchingMode && (!firstColumn || !firstColumn.length) ||
    // Should show empty when there's no searching result
    !(this.nzOptions && this.nzOptions.length) && !this.nzLoadData; // Should show when there's no options and developer does not use nzLoadData
    this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';
    if (this.input) {
      this.dropdownWidthStyle = this.inSearchingMode || this.shouldShowEmpty ? `${this.selectContainer.nativeElement.offsetWidth}px` : '';
    }
  }
  setStatusStyles(status, hasFeedback) {
    // set inner status
    this.status = status;
    this.hasFeedback = hasFeedback;
    this.cdr.markForCheck();
    // render status if nzStatus is set
    this.statusCls = (0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.getStatusClassNames)(this.prefixCls, status, hasFeedback);
    Object.keys(this.statusCls).forEach(status => {
      if (this.statusCls[status]) {
        this.renderer.addClass(this.elementRef.nativeElement, status);
      } else {
        this.renderer.removeClass(this.elementRef.nativeElement, status);
      }
    });
  }
  setLocale() {
    this.locale = this.i18nService.getLocaleData('global');
    this.cdr.markForCheck();
  }
  scrollToActivatedOptions() {
    // The `scrollIntoView` is a native DOM API, which doesn't require Angular to run
    // a change detection when a promise microtask is resolved.
    this.ngZone.runOutsideAngular(() => {
      Promise.resolve().then(() => {
        // scroll only until option menu view is ready
        this.cascaderItems.toArray().filter(e => e.activated).forEach(e => {
          e.nativeElement.scrollIntoView({
            block: 'start',
            inline: 'nearest'
          });
        });
      });
    });
  }
  setupChangeListener() {
    this.input$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.switchMap)(input => input ? new rxjs__WEBPACK_IMPORTED_MODULE_18__.Observable(subscriber => this.ngZone.runOutsideAngular(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.fromEvent)(input.nativeElement, 'change').subscribe(subscriber))) : rxjs__WEBPACK_IMPORTED_MODULE_20__.EMPTY), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(event => event.stopPropagation());
  }
  setupKeydownListener() {
    this.ngZone.runOutsideAngular(() => {
      (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.fromEvent)(this.el, 'keydown').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(event => {
        const keyCode = event.keyCode;
        if (keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.DOWN_ARROW && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.UP_ARROW && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.LEFT_ARROW && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.RIGHT_ARROW && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.ENTER && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.BACKSPACE && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.ESCAPE) {
          return;
        }
        // Press any keys above to reopen menu.
        if (!this.menuVisible && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.BACKSPACE && keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.ESCAPE) {
          // The `setMenuVisible` runs `detectChanges()`, so we don't need to run `markForCheck()` additionally.
          return this.ngZone.run(() => this.setMenuVisible(true));
        }
        // Make these keys work as default in searching mode.
        if (this.inSearchingMode && (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.BACKSPACE || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.LEFT_ARROW || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.RIGHT_ARROW)) {
          return;
        }
        if (!this.menuVisible) {
          return;
        }
        event.preventDefault();
        this.ngZone.run(() => {
          // Interact with the component.
          if (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.DOWN_ARROW) {
            this.moveUpOrDown(false);
          } else if (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.UP_ARROW) {
            this.moveUpOrDown(true);
          } else if (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.LEFT_ARROW) {
            this.moveLeft();
          } else if (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.RIGHT_ARROW) {
            this.moveRight();
          } else if (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_21__.ENTER) {
            this.onEnter();
          }
          // `@HostListener`s run `markForCheck()` internally before calling the actual handler so
          // we call `markForCheck()` to be backwards-compatible.
          this.cdr.markForCheck();
        });
      });
    });
  }
  static #_ = this.ɵfac = function NzCascaderComponent_Factory(t) {
    return new (t || NzCascaderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](NzCascaderService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_zorro_antd_core_config__WEBPACK_IMPORTED_MODULE_22__.NzConfigService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_zorro_antd_i18n__WEBPACK_IMPORTED_MODULE_23__.NzI18nService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_zorro_antd_core_services__WEBPACK_IMPORTED_MODULE_24__.NzDestroyService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_25__.Directionality, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_zorro_antd_core_no_animation__WEBPACK_IMPORTED_MODULE_26__.NzNoAnimationDirective, 9), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormStatusService, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormNoStatusService, 8));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: NzCascaderComponent,
    selectors: [["nz-cascader"], ["", "nz-cascader", ""]],
    viewQuery: function NzCascaderComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c4, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__.CdkConnectedOverlay, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](NzCascaderOptionComponent, 5);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.selectContainer = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.input = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.menu = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.overlay = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.cascaderItems = _t);
      }
    },
    hostVars: 23,
    hostBindings: function NzCascaderComponent_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function NzCascaderComponent_click_HostBindingHandler() {
          return ctx.onTriggerClick();
        })("mouseenter", function NzCascaderComponent_mouseenter_HostBindingHandler() {
          return ctx.onTriggerMouseEnter();
        })("mouseleave", function NzCascaderComponent_mouseleave_HostBindingHandler($event) {
          return ctx.onTriggerMouseLeave($event);
        });
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabIndex", "0");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ant-select-in-form-item", !!ctx.nzFormStatusService)("ant-select-lg", ctx.nzSize === "large")("ant-select-sm", ctx.nzSize === "small")("ant-select-allow-clear", ctx.nzAllowClear)("ant-select-show-arrow", ctx.nzShowArrow)("ant-select-show-search", !!ctx.nzShowSearch)("ant-select-disabled", ctx.nzDisabled)("ant-select-open", ctx.menuVisible)("ant-select-focused", ctx.isFocused)("ant-select-single", true)("ant-select-rtl", ctx.dir === "rtl");
      }
    },
    inputs: {
      nzOptionRender: "nzOptionRender",
      nzShowInput: "nzShowInput",
      nzShowArrow: "nzShowArrow",
      nzAllowClear: "nzAllowClear",
      nzAutoFocus: "nzAutoFocus",
      nzChangeOnSelect: "nzChangeOnSelect",
      nzDisabled: "nzDisabled",
      nzColumnClassName: "nzColumnClassName",
      nzExpandTrigger: "nzExpandTrigger",
      nzValueProperty: "nzValueProperty",
      nzLabelRender: "nzLabelRender",
      nzLabelProperty: "nzLabelProperty",
      nzNotFoundContent: "nzNotFoundContent",
      nzSize: "nzSize",
      nzBackdrop: "nzBackdrop",
      nzShowSearch: "nzShowSearch",
      nzPlaceHolder: "nzPlaceHolder",
      nzMenuClassName: "nzMenuClassName",
      nzMenuStyle: "nzMenuStyle",
      nzMouseEnterDelay: "nzMouseEnterDelay",
      nzMouseLeaveDelay: "nzMouseLeaveDelay",
      nzStatus: "nzStatus",
      nzTriggerAction: "nzTriggerAction",
      nzChangeOn: "nzChangeOn",
      nzLoadData: "nzLoadData",
      nzSuffixIcon: "nzSuffixIcon",
      nzExpandIcon: "nzExpandIcon",
      nzOptions: "nzOptions"
    },
    outputs: {
      nzVisibleChange: "nzVisibleChange",
      nzSelectionChange: "nzSelectionChange",
      nzSelect: "nzSelect",
      nzClear: "nzClear"
    },
    exportAs: ["nzCascader"],
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_29__.NG_VALUE_ACCESSOR,
      useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => NzCascaderComponent),
      multi: true
    }, NzCascaderService, ng_zorro_antd_core_services__WEBPACK_IMPORTED_MODULE_24__.NzDestroyService]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
    ngContentSelectors: _c5,
    decls: 6,
    vars: 6,
    consts: [["cdkOverlayOrigin", ""], ["origin", "cdkOverlayOrigin", "trigger", ""], [4, "ngIf"], ["cdkConnectedOverlay", "", "nzConnectedOverlay", "", 3, "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayPositions", "cdkConnectedOverlayTransformOriginOn", "cdkConnectedOverlayOpen", "overlayOutsideClick", "detach"], [1, "ant-select-selector"], ["selectContainer", ""], [1, "ant-select-selection-search"], ["type", "search", 1, "ant-select-selection-search-input", 3, "readonly", "disabled", "ngModel", "ngModelChange", "blur", "focus"], ["input", ""], ["class", "ant-select-selection-item", 3, "title", 4, "ngIf"], ["class", "ant-select-selection-placeholder", 3, "visibility", 4, "ngIf"], ["class", "ant-select-arrow", 3, "ant-select-arrow-loading", 4, "ngIf"], ["class", "ant-select-clear", 4, "ngIf"], [1, "ant-select-selection-item", 3, "title"], [4, "ngIf", "ngIfElse"], ["labelTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "ant-select-selection-placeholder"], [1, "ant-select-arrow"], ["nz-icon", "", 3, "nzType", "ant-cascader-picker-arrow-expand", 4, "ngIf"], ["nz-icon", "", "nzType", "loading", 4, "ngIf"], [3, "status", 4, "ngIf"], ["nz-icon", "", 3, "nzType"], ["nz-icon", "", "nzType", "loading"], [3, "status"], [1, "ant-select-clear"], ["nz-icon", "", "nzType", "close-circle", "nzTheme", "fill", 3, "click"], [1, "ant-select-dropdown", "ant-cascader-dropdown", "ant-select-dropdown-placement-bottomLeft", 3, "nzNoAnimation", "mouseenter", "mouseleave"], [1, "ant-cascader-menus", 3, "ngClass", "ngStyle"], ["menu", ""], ["class", "ant-cascader-menu", 3, "width", "height", 4, "ngIf", "ngIfElse"], ["hasOptionsTemplate", ""], [1, "ant-cascader-menu"], [1, "ant-cascader-menu-item", "ant-cascader-menu-item-disabled"], [1, "ant-cascader-menu-item-content", 3, "nzComponentName", "specificContent"], ["class", "ant-cascader-menu", "role", "menuitemcheckbox", 3, "ngClass", "height", "width", 4, "ngFor", "ngForOf"], ["role", "menuitemcheckbox", 1, "ant-cascader-menu", 3, "ngClass"], ["nz-cascader-option", "", 3, "expandIcon", "columnIndex", "nzLabelProperty", "optionTemplate", "activated", "highlightText", "option", "dir", "mouseenter", "mouseleave", "click", 4, "ngFor", "ngForOf"], ["nz-cascader-option", "", 3, "expandIcon", "columnIndex", "nzLabelProperty", "optionTemplate", "activated", "highlightText", "option", "dir", "mouseenter", "mouseleave", "click"]],
    template: function NzCascaderComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0, 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NzCascaderComponent_ng_container_3_Template, 10, 12, "ng-container", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, NzCascaderComponent_ng_template_5_Template, 6, 15, "ng-template", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("overlayOutsideClick", function NzCascaderComponent_Template_ng_template_overlayOutsideClick_5_listener($event) {
          return ctx.onClickOutside($event);
        })("detach", function NzCascaderComponent_Template_ng_template_detach_5_listener() {
          return ctx.closeMenu();
        });
      }
      if (rf & 2) {
        const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.nzShowInput);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("cdkConnectedOverlayHasBackdrop", ctx.nzBackdrop)("cdkConnectedOverlayOrigin", _r0)("cdkConnectedOverlayPositions", ctx.positions)("cdkConnectedOverlayTransformOriginOn", ".ant-cascader-dropdown")("cdkConnectedOverlayOpen", ctx.menuVisible);
      }
    },
    dependencies: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_25__.Dir, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgTemplateOutlet, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle, _angular_forms__WEBPACK_IMPORTED_MODULE_29__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_29__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_29__.NgModel, _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__.CdkConnectedOverlay, _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__.CdkOverlayOrigin, ng_zorro_antd_empty__WEBPACK_IMPORTED_MODULE_30__.NzEmbedEmptyComponent, ng_zorro_antd_icon__WEBPACK_IMPORTED_MODULE_3__.NzIconDirective, ng_zorro_antd_core_no_animation__WEBPACK_IMPORTED_MODULE_26__.NzNoAnimationDirective, ng_zorro_antd_core_overlay__WEBPACK_IMPORTED_MODULE_10__.NzConnectedOverlayDirective, ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormItemFeedbackIconComponent, NzCascaderOptionComponent],
    encapsulation: 2,
    data: {
      animation: [ng_zorro_antd_core_animation__WEBPACK_IMPORTED_MODULE_31__.slideMotion]
    },
    changeDetection: 0
  });
}
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.InputBoolean)()], NzCascaderComponent.prototype, "nzShowInput", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.InputBoolean)()], NzCascaderComponent.prototype, "nzShowArrow", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.InputBoolean)()], NzCascaderComponent.prototype, "nzAllowClear", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.InputBoolean)()], NzCascaderComponent.prototype, "nzAutoFocus", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.InputBoolean)()], NzCascaderComponent.prototype, "nzChangeOnSelect", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_util__WEBPACK_IMPORTED_MODULE_7__.InputBoolean)()], NzCascaderComponent.prototype, "nzDisabled", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_config__WEBPACK_IMPORTED_MODULE_22__.WithConfig)()], NzCascaderComponent.prototype, "nzSize", void 0);
(0,tslib__WEBPACK_IMPORTED_MODULE_32__.__decorate)([(0,ng_zorro_antd_core_config__WEBPACK_IMPORTED_MODULE_22__.WithConfig)()], NzCascaderComponent.prototype, "nzBackdrop", void 0);
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NzCascaderComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      selector: 'nz-cascader, [nz-cascader]',
      exportAs: 'nzCascader',
      preserveWhitespaces: false,
      template: `
    <div cdkOverlayOrigin #origin="cdkOverlayOrigin" #trigger>
      <ng-container *ngIf="nzShowInput">
        <div #selectContainer class="ant-select-selector">
          <span class="ant-select-selection-search">
            <input
              #input
              type="search"
              class="ant-select-selection-search-input"
              [style.opacity]="nzShowSearch ? '' : '0'"
              [attr.autoComplete]="'off'"
              [attr.expanded]="menuVisible"
              [attr.autofocus]="nzAutoFocus ? 'autofocus' : null"
              [readonly]="!nzShowSearch"
              [disabled]="nzDisabled"
              [(ngModel)]="inputValue"
              (blur)="handleInputBlur()"
              (focus)="handleInputFocus()"
            />
          </span>
          <span *ngIf="showLabelRender" class="ant-select-selection-item" [title]="labelRenderText">
            <ng-container *ngIf="!isLabelRenderTemplate; else labelTemplate">{{ labelRenderText }}</ng-container>
            <ng-template #labelTemplate>
              <ng-template
                [ngTemplateOutlet]="nzLabelRender"
                [ngTemplateOutletContext]="labelRenderContext"
              ></ng-template>
            </ng-template>
          </span>
          <span
            *ngIf="!showLabelRender"
            class="ant-select-selection-placeholder"
            [style.visibility]="!inputValue ? 'visible' : 'hidden'"
            >{{ showPlaceholder ? nzPlaceHolder || locale?.placeholder : null }}</span
          >
        </div>
        <span class="ant-select-arrow" [class.ant-select-arrow-loading]="isLoading" *ngIf="nzShowArrow">
          <span
            *ngIf="!isLoading"
            nz-icon
            [nzType]="$any(nzSuffixIcon)"
            [class.ant-cascader-picker-arrow-expand]="menuVisible"
          ></span>
          <span *ngIf="isLoading" nz-icon nzType="loading"></span>
          <nz-form-item-feedback-icon *ngIf="hasFeedback && !!status" [status]="status"></nz-form-item-feedback-icon>
        </span>
        <span class="ant-select-clear" *ngIf="clearIconVisible">
          <span nz-icon nzType="close-circle" nzTheme="fill" (click)="clearSelection($event)"></span>
        </span>
      </ng-container>
      <ng-content></ng-content>
    </div>
    <ng-template
      cdkConnectedOverlay
      nzConnectedOverlay
      [cdkConnectedOverlayHasBackdrop]="nzBackdrop"
      [cdkConnectedOverlayOrigin]="origin"
      [cdkConnectedOverlayPositions]="positions"
      [cdkConnectedOverlayTransformOriginOn]="'.ant-cascader-dropdown'"
      [cdkConnectedOverlayOpen]="menuVisible"
      (overlayOutsideClick)="onClickOutside($event)"
      (detach)="closeMenu()"
    >
      <div
        class="ant-select-dropdown ant-cascader-dropdown ant-select-dropdown-placement-bottomLeft"
        [class.ant-cascader-dropdown-rtl]="dir === 'rtl'"
        [@slideMotion]="'enter'"
        [@.disabled]="!!noAnimation?.nzNoAnimation"
        [nzNoAnimation]="noAnimation?.nzNoAnimation"
        (mouseenter)="onTriggerMouseEnter()"
        (mouseleave)="onTriggerMouseLeave($event)"
      >
        <div
          #menu
          class="ant-cascader-menus"
          [class.ant-cascader-rtl]="dir === 'rtl'"
          [class.ant-cascader-menus-hidden]="!menuVisible"
          [class.ant-cascader-menu-empty]="shouldShowEmpty"
          [ngClass]="menuCls"
          [ngStyle]="nzMenuStyle"
        >
          <ul
            *ngIf="shouldShowEmpty; else hasOptionsTemplate"
            class="ant-cascader-menu"
            [style.width]="dropdownWidthStyle"
            [style.height]="dropdownHeightStyle"
          >
            <li class="ant-cascader-menu-item ant-cascader-menu-item-disabled">
              <nz-embed-empty
                class="ant-cascader-menu-item-content"
                [nzComponentName]="'cascader'"
                [specificContent]="nzNotFoundContent"
              ></nz-embed-empty>
            </li>
          </ul>
          <ng-template #hasOptionsTemplate>
            <ul
              *ngFor="let options of cascaderService.columns; let i = index"
              class="ant-cascader-menu"
              role="menuitemcheckbox"
              [ngClass]="menuColumnCls"
              [style.height]="dropdownHeightStyle"
              [style.width]="dropdownWidthStyle"
            >
              <li
                nz-cascader-option
                *ngFor="let option of options"
                [expandIcon]="nzExpandIcon"
                [columnIndex]="i"
                [nzLabelProperty]="nzLabelProperty"
                [optionTemplate]="nzOptionRender"
                [activated]="isOptionActivated(option, i)"
                [highlightText]="inSearchingMode ? inputValue : ''"
                [option]="option"
                [dir]="dir"
                (mouseenter)="onOptionMouseEnter(option, i, $event)"
                (mouseleave)="onOptionMouseLeave(option, i, $event)"
                (click)="onOptionClick(option, i, $event)"
              ></li>
            </ul>
          </ng-template>
        </div>
      </div>
    </ng-template>
  `,
      animations: [ng_zorro_antd_core_animation__WEBPACK_IMPORTED_MODULE_31__.slideMotion],
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_29__.NG_VALUE_ACCESSOR,
        useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => NzCascaderComponent),
        multi: true
      }, NzCascaderService, ng_zorro_antd_core_services__WEBPACK_IMPORTED_MODULE_24__.NzDestroyService],
      host: {
        '[attr.tabIndex]': '"0"',
        '[class.ant-select-in-form-item]': '!!nzFormStatusService',
        '[class.ant-select-lg]': 'nzSize === "large"',
        '[class.ant-select-sm]': 'nzSize === "small"',
        '[class.ant-select-allow-clear]': 'nzAllowClear',
        '[class.ant-select-show-arrow]': 'nzShowArrow',
        '[class.ant-select-show-search]': '!!nzShowSearch',
        '[class.ant-select-disabled]': 'nzDisabled',
        '[class.ant-select-open]': 'menuVisible',
        '[class.ant-select-focused]': 'isFocused',
        '[class.ant-select-single]': 'true',
        '[class.ant-select-rtl]': `dir ==='rtl'`
      }
    }]
  }], function () {
    return [{
      type: NzCascaderService
    }, {
      type: ng_zorro_antd_core_config__WEBPACK_IMPORTED_MODULE_22__.NzConfigService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: ng_zorro_antd_i18n__WEBPACK_IMPORTED_MODULE_23__.NzI18nService
    }, {
      type: ng_zorro_antd_core_services__WEBPACK_IMPORTED_MODULE_24__.NzDestroyService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_25__.Directionality,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }, {
      type: ng_zorro_antd_core_no_animation__WEBPACK_IMPORTED_MODULE_26__.NzNoAnimationDirective,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Host
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }, {
      type: ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormStatusService,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }, {
      type: ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormNoStatusService,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }];
  }, {
    selectContainer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['selectContainer', {
        static: false
      }]
    }],
    input: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['input', {
        static: false
      }]
    }],
    menu: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['menu', {
        static: false
      }]
    }],
    overlay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__.CdkConnectedOverlay, {
        static: false
      }]
    }],
    cascaderItems: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChildren,
      args: [NzCascaderOptionComponent]
    }],
    nzOptionRender: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzShowInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzShowArrow: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzAllowClear: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzAutoFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzChangeOnSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzColumnClassName: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzExpandTrigger: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzValueProperty: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzLabelRender: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzLabelProperty: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzNotFoundContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzBackdrop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzShowSearch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzPlaceHolder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzMenuClassName: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzMenuStyle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzMouseEnterDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzMouseLeaveDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzStatus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzTriggerAction: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzChangeOn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzLoadData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzSuffixIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzExpandIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nzVisibleChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    nzSelectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    nzSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    nzClear: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    onTriggerClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['click']
    }],
    onTriggerMouseEnter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['mouseenter']
    }],
    onTriggerMouseLeave: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['mouseleave', ['$event']]
    }]
  });
})();

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
class NzCascaderModule {
  static #_ = this.ɵfac = function NzCascaderModule_Factory(t) {
    return new (t || NzCascaderModule)();
  };
  static #_2 = this.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: NzCascaderModule
  });
  static #_3 = this.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    imports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_25__.BidiModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_29__.FormsModule, _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__.OverlayModule, ng_zorro_antd_core_outlet__WEBPACK_IMPORTED_MODULE_2__.NzOutletModule, ng_zorro_antd_empty__WEBPACK_IMPORTED_MODULE_30__.NzEmptyModule, ng_zorro_antd_core_highlight__WEBPACK_IMPORTED_MODULE_4__.NzHighlightModule, ng_zorro_antd_icon__WEBPACK_IMPORTED_MODULE_3__.NzIconModule, ng_zorro_antd_input__WEBPACK_IMPORTED_MODULE_33__.NzInputModule, ng_zorro_antd_core_no_animation__WEBPACK_IMPORTED_MODULE_26__.NzNoAnimationModule, ng_zorro_antd_core_overlay__WEBPACK_IMPORTED_MODULE_10__.NzOverlayModule, ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormPatchModule]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NzCascaderModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_25__.BidiModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_29__.FormsModule, _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_28__.OverlayModule, ng_zorro_antd_core_outlet__WEBPACK_IMPORTED_MODULE_2__.NzOutletModule, ng_zorro_antd_empty__WEBPACK_IMPORTED_MODULE_30__.NzEmptyModule, ng_zorro_antd_core_highlight__WEBPACK_IMPORTED_MODULE_4__.NzHighlightModule, ng_zorro_antd_icon__WEBPACK_IMPORTED_MODULE_3__.NzIconModule, ng_zorro_antd_input__WEBPACK_IMPORTED_MODULE_33__.NzInputModule, ng_zorro_antd_core_no_animation__WEBPACK_IMPORTED_MODULE_26__.NzNoAnimationModule, ng_zorro_antd_core_overlay__WEBPACK_IMPORTED_MODULE_10__.NzOverlayModule, ng_zorro_antd_core_form__WEBPACK_IMPORTED_MODULE_27__.NzFormPatchModule],
      declarations: [NzCascaderComponent, NzCascaderOptionComponent],
      exports: [NzCascaderComponent]
    }]
  }], null, null);
})();

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 67369:
/*!******************************************************************************!*\
  !*** ./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-core-highlight.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NzHighlightModule: () => (/* binding */ NzHighlightModule),
/* harmony export */   NzHighlightPipe: () => (/* binding */ NzHighlightPipe)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 61699);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 26575);




/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
// Regular Expressions for parsing tags and attributes
const SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
// ! to ~ is the ASCII range.
const NON_ALPHANUMERIC_REGEXP = /([^\#-~ |!])/g;
/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 */
function encodeEntities(value) {
  return value.replace(/&/g, '&amp;').replace(SURROGATE_PAIR_REGEXP, match => {
    const hi = match.charCodeAt(0);
    const low = match.charCodeAt(1);
    return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;
  }).replace(NON_ALPHANUMERIC_REGEXP, match => `&#${match.charCodeAt(0)};`).replace(/</g, '&lt;').replace(/>/g, '&gt;');
}
class NzHighlightPipe {
  constructor() {
    this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];
  }
  transform(value, highlightValue, flags, klass) {
    if (!highlightValue) {
      return value;
    }
    // Escapes regex keyword to interpret these characters literally
    const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$&'), flags);
    const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);
    return encodeEntities(wrapValue).replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class="${klass}">` : '<span>').replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');
  }
  static #_ = this.ɵfac = function NzHighlightPipe_Factory(t) {
    return new (t || NzHighlightPipe)();
  };
  static #_2 = this.ɵpipe = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({
    name: "nzHighlight",
    type: NzHighlightPipe,
    pure: true
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NzHighlightPipe, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Pipe,
    args: [{
      name: 'nzHighlight',
      pure: true
    }]
  }], null, null);
})();

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
class NzHighlightModule {
  static #_ = this.ɵfac = function NzHighlightModule_Factory(t) {
    return new (t || NzHighlightModule)();
  };
  static #_2 = this.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: NzHighlightModule
  });
  static #_3 = this.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NzHighlightModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule],
      exports: [NzHighlightPipe],
      declarations: [NzHighlightPipe]
    }]
  }], null, null);
})();

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ })

}]);
//# sourceMappingURL=default-node_modules_ng-zorro-antd_fesm2022_ng-zorro-antd-cascader_mjs.js.map